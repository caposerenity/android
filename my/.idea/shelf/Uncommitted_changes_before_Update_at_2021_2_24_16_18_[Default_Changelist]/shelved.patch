Index: app/src/main/java/com/example/my/fragment/ManagerFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.Manifest;\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Bundle;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.VerifyActivity;\r\nimport com.example.my.adapter.UserAdapter;\r\nimport com.example.my.listview.User;\r\nimport com.example.my.requests.requests;\r\nimport com.example.my.adapter.TaskAdapter;\r\nimport com.example.my.listview.Task;\r\nimport com.scwang.smartrefresh.layout.api.RefreshLayout;\r\nimport com.scwang.smartrefresh.layout.listener.OnRefreshListener;\r\nimport com.xuexiang.xui.widget.button.ButtonView;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.spinner.materialspinner.MaterialSpinner;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.Iterator;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class ManagerFragment extends Fragment {\r\n    private ArrayList<Task> tasks;\r\n    private ArrayList<Task> showTasks;\r\n    private ArrayAdapter<Task> adapterItems;\r\n    private OnItemSelectedListener listener;\r\n    private ButtonView verifyButton;\r\n    private MaterialSpinner mMaterialSpinner;\r\n    private TextView text;\r\n    private TextView text2;\r\n    private RefreshLayout refreshLayout;\r\n\r\n    public interface OnItemSelectedListener {\r\n        public void onItemSelected(Task i);\r\n    }\r\n\r\n    public static ManagerFragment newInstance(ArrayList<Task> tasks) {\r\n        ManagerFragment mf = new ManagerFragment();\r\n        mf.tasks=tasks;\r\n        Bundle args = new Bundle();\r\n        mf.setArguments(args);\r\n        return mf;\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(Activity activity) {\r\n        super.onAttach(activity);\r\n        if (activity instanceof OnItemSelectedListener) {\r\n            listener = (OnItemSelectedListener) activity;\r\n        } else {\r\n            throw new ClassCastException(activity.toString()\r\n                    + \" must implement ItemsListFragment.OnItemSelectedListener\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.autoRefresh();\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                refresh();\r\n                refreshLayout.getLayout().postDelayed(() -> {\r\n                    getall();\r\n                    adapterItems.notifyDataSetChanged();\r\n                    refreshLayout.finishRefresh();\r\n                    refreshLayout.resetNoMoreData();//setNoMoreData(false);\r\n                }, 2000);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Create arraylist from item fixtures\r\n        showTasks=new ArrayList<Task>();\r\n        adapterItems = new TaskAdapter(getActivity(),\r\n                R.layout.list_item, showTasks);\r\n    }\r\n\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view=inflater.inflate(R.layout.fragment_manager, container, false);\r\n        mMaterialSpinner=view.findViewById(R.id.spinner);\r\n        text=view.findViewById(R.id.mnum);\r\n        text2=view.findViewById(R.id.num);\r\n        verifyButton=view.findViewById(R.id.btn_verify);\r\n\r\n\r\n        mMaterialSpinner.setOnItemSelectedListener((spinner, position, id, item) ->\r\n        {\r\n            switch(position){\r\n                    case 0:\r\n                        getall();\r\n                        break;\r\n                    case 1:\r\n                        //requests.register(\"lyxxn1\",\"13712345678\",\"1234\");\r\n                        //requests.getAllTasks();\r\n                        update(\"待完成\");\r\n                        break;\r\n                    case 2:\r\n                        update(\"待质检\");\r\n                        break;\r\n                    case 3:\r\n                        update(\"质检中\");\r\n                        break;\r\n                    case 4:\r\n                        update(\"不合格\");\r\n                        break;\r\n                    case 5:\r\n                        update(\"待提交客户\");\r\n                        break;\r\n                    case 6:\r\n                        update(\"已提交客户\");\r\n                        break;\r\n                }\r\n            adapterItems.notifyDataSetChanged();\r\n        });\r\n        ListView lvItems = (ListView) view.findViewById(R.id.mlist);\r\n        lvItems.setAdapter(adapterItems);\r\n        lvItems.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View item, int position,\r\n                                    long rowId) {\r\n                // Retrieve item based on position\r\n                Task i = adapterItems.getItem(position);\r\n                // Fire selected event for item\r\n                listener.onItemSelected(i);\r\n\r\n            }\r\n        });\r\n        verifyButton=view.findViewById(R.id.btn_verify);\r\n        verifyButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                verify();\r\n            }\r\n        });\r\n        refreshLayout=view.findViewById(R.id.refreshlayout);\r\n        return view;\r\n    }\r\n    private void update(String s){\r\n        Log.d(\"abc\", s);\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(s)){\r\n                Log.d(tasks.get(i).getStatus(), s);\r\n                if(!isIn(tasks.get(i).getTask_id())){\r\n                    showTasks.add(tasks.get(i));\r\n                }\r\n            }\r\n            if(!tasks.get(i).getStatus().equals(s)){\r\n                showTasks.remove(tasks.get(i));\r\n            }\r\n        }\r\n    }\r\n    private void verify(){\r\n        Intent i=new Intent(getActivity(), VerifyActivity.class);\r\n        startActivity(i);\r\n    }\r\n    private void getall(){\r\n        int size=showTasks.size();\r\n        int t=0;\r\n        while(t<size){\r\n            showTasks.remove(t);\r\n            size--;\r\n        }\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(!isIn(tasks.get(i).getTask_id())){\r\n                showTasks.add(tasks.get(i));\r\n            }\r\n        }\r\n        text.setText(\"\"+overdue());\r\n        //TODO:在text2设置需要审核的人员数\r\n        text2.setText(\"3\");\r\n    }\r\n    private void refresh(){\r\n        ArrayList<Task> temp=new ArrayList<Task>();\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                .asList(String.class)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(s -> {\r\n                    Log.d(\"TAG\", s.get(0).toString());\r\n                    for (String value : s) {\r\n                        JSONObject js = new JSONObject(value);\r\n                        Task t = new Task(js.getString(\"task_id\"), js.getString(\"task_name\"), js.getString(\"group_leader\"),\r\n                                js.getString(\"quality_inspector\"), js.getString(\"expected_time\"),\r\n                                js.getString(\"expected_exam_time\"), js.getString(\"create_time\"), js.getString(\"status\"),\r\n                                js.getString(\"comments\"), js.getString(\"finish_time\"), js.getString(\"finish_exam_time\"));\r\n                        temp.add(t);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"获取任务列表失败\");\r\n                });\r\n        mMaterialSpinner.setSelectedIndex(0);\r\n        tasks=temp;\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getActivity())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    private boolean isIn(String Id){\r\n        for(int i=0;i<showTasks.size();i++){\r\n            if (showTasks.get(i).getTask_id().equals(Id)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private int overdue(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"待完成\")){\r\n                Date beginTime= DateUtils.string2Date(tasks.get(i).getExpected_time(),DateUtils.yyyyMMddHHmmss.get());\r\n                Date endTime= DateUtils.getNowDate();\r\n                if (DateUtils.date2Millis(beginTime) <DateUtils.date2Millis( endTime)) {\r\n                    res++;\r\n                }\r\n            }\r\n            if(tasks.get(i).getStatus().equals(\"待质检\")||tasks.get(i).getStatus().equals(\"质检中\")){\r\n                Date beginTime= DateUtils.string2Date(tasks.get(i).getExpected_exam_time(),DateUtils.yyyyMMddHHmmss.get());\r\n                Date endTime= DateUtils.getNowDate();\r\n                if (DateUtils.date2Millis(beginTime) <DateUtils.date2Millis( endTime)) {\r\n                    res++;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/ManagerFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/ManagerFragment.java	(date 1614153863273)
@@ -205,7 +205,7 @@
     }
     private void refresh(){
         ArrayList<Task> temp=new ArrayList<Task>();
-        RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+        RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                 .asList(String.class)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(s -> {
Index: app/src/main/java/com/example/my/fragment/TeamLeaderFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.app.Activity;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.adapter.TaskAdapter;\r\nimport com.example.my.listview.Task;\r\nimport com.scwang.smartrefresh.layout.api.RefreshLayout;\r\nimport com.scwang.smartrefresh.layout.listener.OnRefreshListener;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.spinner.materialspinner.MaterialSpinner;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class TeamLeaderFragment extends Fragment {\r\n    private ArrayList<Task> tasks;\r\n    private ArrayList<Task> showTasks;\r\n    private ArrayAdapter<Task> adapterItems;\r\n    private TeamLeaderFragment.OnItemSelectedListener listener;\r\n    private TextView text1;\r\n    private TextView text2;\r\n    private MaterialSpinner mMaterialSpinner;\r\n    //这里是组长Id\r\n    private String leaderName;\r\n    private RefreshLayout refreshLayout;\r\n\r\n    public interface OnItemSelectedListener {\r\n        public void onItemSelected(Task i);\r\n    }\r\n\r\n    //MainActivity需要传入组长名称\r\n    public static TeamLeaderFragment newInstance(ArrayList<Task> all,String leaderName) {\r\n        TeamLeaderFragment mf = new TeamLeaderFragment();\r\n        mf.tasks=new ArrayList<Task>(all);\r\n        mf.leaderName=leaderName;\r\n        Bundle args = new Bundle();\r\n        mf.setArguments(args);\r\n        return mf;\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(Activity activity) {\r\n        super.onAttach(activity);\r\n        if (activity instanceof TeamLeaderFragment.OnItemSelectedListener) {\r\n            listener = (TeamLeaderFragment.OnItemSelectedListener) activity;\r\n        } else {\r\n            throw new ClassCastException(activity.toString()\r\n                    + \" must implement ItemsListFragment.OnItemSelectedListener\");\r\n        }\r\n    }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Create arraylist from item fixtures\r\n        showTasks=new ArrayList<Task>();\r\n        adapterItems = new TaskAdapter(getActivity(),\r\n                R.layout.list_item, showTasks);\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.autoRefresh();\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                refresh();\r\n                refreshLayout.getLayout().postDelayed(() -> {\r\n                    getall();\r\n                    adapterItems.notifyDataSetChanged();\r\n                    refreshLayout.finishRefresh();\r\n                    refreshLayout.resetNoMoreData();//setNoMoreData(false);\r\n                }, 2000);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view=inflater.inflate(R.layout.fragment_teamleader, container, false);\r\n        mMaterialSpinner=view.findViewById(R.id.spinner);\r\n        text1=view.findViewById(R.id.tnum1);\r\n        text2=view.findViewById(R.id.tnum2);\r\n\r\n\r\n        mMaterialSpinner.setOnItemSelectedListener((spinner, position, id, item) ->\r\n        {\r\n            switch(position){\r\n                case 0:\r\n                    update(\"待完成\");\r\n                    break;\r\n                case 1:\r\n                    update(\"不合格\");\r\n                    break;\r\n            }\r\n            adapterItems.notifyDataSetChanged();\r\n        });\r\n        ListView lvItems = (ListView) view.findViewById(R.id.tlist);\r\n        lvItems.setAdapter(adapterItems);\r\n        lvItems.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View item, int position,\r\n                                    long rowId) {\r\n                // Retrieve item based on position\r\n                Task i = adapterItems.getItem(position);\r\n                // Fire selected event for item\r\n                listener.onItemSelected(i);\r\n            }\r\n        });\r\n        refreshLayout=view.findViewById(R.id.refreshlayout);\r\n        return view;\r\n    }\r\n    private void update(String s){\r\n        Log.d(\"abc\", s);\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(s)){\r\n                Log.d(tasks.get(i).getStatus(), s);\r\n                if(!isIn(tasks.get(i).getTask_id())){\r\n                    showTasks.add(tasks.get(i));\r\n                }\r\n            }\r\n            if(!tasks.get(i).getStatus().equals(s)){\r\n                showTasks.remove(tasks.get(i));\r\n            }\r\n        }\r\n    }\r\n    private void getall(){\r\n        text1.setText(\"\"+needToDo());\r\n        text2.setText(\"\"+overdue());\r\n        int size=showTasks.size();\r\n        int t=0;\r\n        while(t<size){\r\n            showTasks.remove(t);\r\n            size--;\r\n        }\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(!isIn(tasks.get(i).getTask_id())){\r\n                showTasks.add(tasks.get(i));\r\n            }\r\n        }\r\n        update(\"待完成\");\r\n    }\r\n    //TODO:tasks中仅包含该组长负责的任务\r\n    private void refresh(){\r\n        ArrayList<Task> temp=new ArrayList<Task>();\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                .asList(String.class)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(s -> {\r\n                    Log.d(\"TAG\", s.get(0).toString());\r\n                    for (String value : s) {\r\n                        JSONObject js = new JSONObject(value);\r\n                        Task t = new Task(js.getString(\"task_id\"), js.getString(\"task_name\"), js.getString(\"group_leader\"),\r\n                                js.getString(\"quality_inspector\"), js.getString(\"expected_time\"),\r\n                                js.getString(\"expected_exam_time\"), js.getString(\"create_time\"), js.getString(\"status\"),\r\n                                js.getString(\"comments\"), js.getString(\"finish_time\"), js.getString(\"finish_exam_time\"));\r\n                        temp.add(t);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"获取任务列表失败\");\r\n                });\r\n        mMaterialSpinner.setSelectedIndex(0);\r\n        tasks=temp;\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getActivity())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    private boolean isIn(String Id){\r\n        for(int i=0;i<showTasks.size();i++){\r\n            if (showTasks.get(i).getTask_id().equals(Id)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private boolean isIn2(String Id){\r\n        for(int i=0;i<tasks.size();i++){\r\n            if (tasks.get(i).getTask_id().equals(Id)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private int overdue(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"待完成\")){\r\n                Date beginTime= DateUtils.string2Date(tasks.get(i).getExpected_time(),DateUtils.yyyyMMddHHmmss.get());\r\n                Date endTime= DateUtils.getNowDate();\r\n                if (DateUtils.date2Millis(beginTime) <DateUtils.date2Millis( endTime)) {\r\n                    res++;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    private int needToDo(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"待完成\")){\r\n                res++;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/TeamLeaderFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/TeamLeaderFragment.java	(date 1614153863277)
@@ -165,7 +165,7 @@
     //TODO:tasks中仅包含该组长负责的任务
     private void refresh(){
         ArrayList<Task> temp=new ArrayList<Task>();
-        RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+        RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                 .asList(String.class)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(s -> {
Index: app/src/main/java/com/example/my/fragment/CheckManagerDetailFragment_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\nimport android.content.Context;\r\n\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.NoteActivity;\r\nimport com.example.my.listview.Task;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.picker.widget.OptionsPickerView;\r\nimport com.xuexiang.xui.widget.picker.widget.builder.OptionsPickerBuilder;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class CheckManagerDetailFragment_1 extends Fragment {\r\n    private Task item;\r\n    private List<String> Result;\r\n    private List<Integer> ResultId;\r\n    private int resultSelectOption = 0;\r\n    private static final int REQUEST_CODE_ADD = 1002;\r\n    public static TextView note;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        item = (Task) getArguments().getSerializable(\"task\");\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_checkmanager1_detail, container, false);\r\n        TextView name = view.findViewById(R.id.TaskName);\r\n        TextView ddl2=view.findViewById(R.id.ddl2);\r\n        TextView tl=view.findViewById(R.id.Teamleader);\r\n        TextView maketime=view.findViewById(R.id.makeTime);\r\n        TextView finish1=view.findViewById(R.id.finish1);\r\n        name.append(item.getTask_name());\r\n        ddl2.append(item.getExpected_exam_time());\r\n        tl.append(item.getGroup_leader());\r\n        note.append(item.getComments());\r\n        maketime.append(item.getCreate_time());\r\n        finish1.append(item.getFinish_time());\r\n        Button button=view.findViewById(R.id.add_button);\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                add();\r\n            }\r\n        });\r\n        Button submit=view.findViewById(R.id.submit);\r\n        SharedPreferences sharedPre=getActivity().getSharedPreferences(\"config\", getActivity().MODE_PRIVATE);\r\n        int user_id = sharedPre.getInt(\"user_id\",-1);\r\n        String user_name=sharedPre.getString(\"name\",\"\");\r\n        Result= new ArrayList<String>();\r\n        ResultId= new ArrayList<Integer>();\r\n        Result.add(user_name);\r\n        ResultId.add(user_id);\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/user/Quality_inspector/filterPosition\")\r\n                .asList(String.class)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(res->{\r\n                    if(res.size()!=0){\r\n                        //Log.d(\"TAG\", res.toString());\r\n                        //后续处理\r\n                        for (String leaderI : res) {\r\n                            JSONObject j = new JSONObject(leaderI);\r\n                            Result.add(j.getString(\"name\"));\r\n                            ResultId.add(j.getInt(\"user_id\"));\r\n                        }\r\n                    }\r\n                },throwable -> {\r\n                    showSimpleWarningDialog(\"查询质检员失败，请稍后重试\");\r\n                });\r\n\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                OptionsPickerView pvOptions = new OptionsPickerBuilder(getActivity(), (v, options1, options2, options3) -> {\r\n                    resultSelectOption = options1;\r\n                    RxHttp.postJson(\"http://10.0.2.2:8000/api/task/modifytask\")\r\n                            .add(\"task_id\",item.getTask_id()).add(\"status\",\"examing\").add(\"quality_inspector\",ResultId.get(resultSelectOption))\r\n                            .asString()\r\n                            .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                            .subscribe(res -> {\r\n                                JSONObject j= new JSONObject(res);\r\n                                String message =j.getString(\"message\");\r\n                                if(!message.equals(\"null\")){\r\n                                    Log.d(\"TAG\", message);\r\n                                    showSimpleWarningDialog(message);\r\n                                }else{\r\n                                    showSimpleTipDialog(\"修改成功\");\r\n                                }\r\n                            }, throwable -> {\r\n                                showSimpleWarningDialog(\"网络不良,请重试\");\r\n                            });\r\n                    return false;\r\n                })\r\n                        .setTitleText(\"分配质检员\")\r\n                        .setSelectOptions(resultSelectOption)\r\n\r\n                        .build();\r\n                pvOptions.setPicker(Result);\r\n                pvOptions.show();\r\n\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n    public static CheckManagerDetailFragment_1 newInstance(Task item) {\r\n        CheckManagerDetailFragment_1 fragmentDemo = new CheckManagerDetailFragment_1();\r\n        Bundle args = new Bundle();\r\n        args.putSerializable(\"task\", item);\r\n        fragmentDemo.setArguments(args);\r\n        return fragmentDemo;\r\n    }\r\n    private void add(){\r\n        String note=item.getComments();\r\n        String id=item.getTask_id();\r\n        Intent i=new Intent(getActivity(),NoteActivity.class);\r\n        i.putExtra(\"note\",note);\r\n        i.putExtra(\"id\",id);\r\n        startActivity(i);\r\n    }\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        //finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/CheckManagerDetailFragment_1.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/CheckManagerDetailFragment_1.java	(date 1614153863282)
@@ -71,7 +71,7 @@
         ResultId= new ArrayList<Integer>();
         Result.add(user_name);
         ResultId.add(user_id);
-        RxHttp.get("http://10.0.2.2:8000/api/user/Quality_inspector/filterPosition")
+        RxHttp.get("http://192.168.1.106:8000/api/user/Quality_inspector/filterPosition")
                 .asList(String.class)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(res->{
@@ -93,7 +93,7 @@
             public void onClick(View view) {
                 OptionsPickerView pvOptions = new OptionsPickerBuilder(getActivity(), (v, options1, options2, options3) -> {
                     resultSelectOption = options1;
-                    RxHttp.postJson("http://10.0.2.2:8000/api/task/modifytask")
+                    RxHttp.postJson("http://192.168.1.106:8000/api/task/modifytask")
                             .add("task_id",item.getTask_id()).add("status","examing").add("quality_inspector",ResultId.get(resultSelectOption))
                             .asString()
                             .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
Index: app/src/main/java/com/example/my/fragment/CheckManagerFragment_1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.VerifyActivity;\r\nimport com.example.my.adapter.TaskAdapter;\r\nimport com.example.my.listview.Task;\r\nimport com.scwang.smartrefresh.layout.SmartRefreshLayout;\r\nimport com.scwang.smartrefresh.layout.api.RefreshLayout;\r\nimport com.scwang.smartrefresh.layout.listener.OnRefreshListener;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class CheckManagerFragment_1 extends Fragment {\r\n    private ArrayList<Task> tasks;\r\n    private ArrayList<Task> showTasks;\r\n    private ArrayAdapter<Task> adapterItems;\r\n    private OnItemSelectedListener listener;\r\n    private String s;\r\n    private RefreshLayout refreshLayout;\r\n    TextView text;\r\n\r\n    public interface OnItemSelectedListener {\r\n        public void onItemSelected(Task i);\r\n    }\r\n    public static CheckManagerFragment_1 newInstance(ArrayList<Task> all,String s) {\r\n        CheckManagerFragment_1 mf = new CheckManagerFragment_1();\r\n        mf.tasks=new ArrayList<Task>(all);\r\n        mf.s=s;\r\n        Bundle args = new Bundle();\r\n        mf.setArguments(args);\r\n        return mf;\r\n    }\r\n    @Override\r\n    public void onAttach(@NotNull Activity activity) {\r\n        super.onAttach(activity);\r\n        if (activity instanceof CheckManagerFragment_1.OnItemSelectedListener) {\r\n            listener = (CheckManagerFragment_1.OnItemSelectedListener) activity;\r\n        } else {\r\n            throw new ClassCastException(activity.toString()\r\n                    + \" must implement ItemsListFragment.OnItemSelectedListener\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.autoRefresh();\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                refresh();\r\n                refreshLayout.getLayout().postDelayed(() -> {\r\n                    getall();\r\n                    adapterItems.notifyDataSetChanged();\r\n                    refreshLayout.finishRefresh();\r\n                    refreshLayout.resetNoMoreData();//setNoMoreData(false);\r\n                }, 2000);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Create arraylist from item fixtures\r\n        showTasks=new ArrayList<Task>();\r\n        adapterItems = new TaskAdapter(getActivity(),\r\n                R.layout.list_item, showTasks);\r\n    }\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view=inflater.inflate(R.layout.fragment_checkmanager1, container, false);\r\n        text=view.findViewById(R.id.mnum);\r\n        ListView lvItems = (ListView) view.findViewById(R.id.mlist);\r\n        lvItems.setAdapter(adapterItems);\r\n        lvItems.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View item, int position,\r\n                                    long rowId) {\r\n                // Retrieve item based on position\r\n                Task i = adapterItems.getItem(position);\r\n                // Fire selected event for item\r\n                listener.onItemSelected(i);\r\n\r\n            }\r\n        });\r\n        refreshLayout=view.findViewById(R.id.refreshlayout);\r\n        return view;\r\n    }\r\n    private void update(String s){\r\n        Log.d(\"abc\", s);\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(s)){\r\n                Log.d(tasks.get(i).getStatus(), s);\r\n                if(!isIn(tasks.get(i).getTask_id())){\r\n                    showTasks.add(tasks.get(i));\r\n                }\r\n            }\r\n            if(!tasks.get(i).getStatus().equals(s)){\r\n                showTasks.remove(tasks.get(i));\r\n            }\r\n        }\r\n    }\r\n    private void getall(){\r\n        int size=showTasks.size();\r\n        int t=0;\r\n        while(t<size){\r\n            showTasks.remove(t);\r\n            size--;\r\n        }\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(!isIn(tasks.get(i).getTask_id())){\r\n                showTasks.add(tasks.get(i));\r\n            }\r\n        }\r\n        update(s);\r\n        text.setText(\"\"+overdue());\r\n    }\r\n    private void refresh(){\r\n        ArrayList<Task> temp=new ArrayList<Task>();\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                .asList(String.class)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(s -> {\r\n                    Log.d(\"TAG\", s.get(0).toString());\r\n                    for (String value : s) {\r\n                        JSONObject js = new JSONObject(value);\r\n                        Task t = new Task(js.getString(\"task_id\"), js.getString(\"task_name\"), js.getString(\"group_leader\"),\r\n                                js.getString(\"quality_inspector\"), js.getString(\"expected_time\"),\r\n                                js.getString(\"expected_exam_time\"), js.getString(\"create_time\"), js.getString(\"status\"),\r\n                                js.getString(\"comments\"), js.getString(\"finish_time\"), js.getString(\"finish_exam_time\"));\r\n                        temp.add(t);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"获取任务列表失败\");\r\n                });\r\n        tasks=temp;\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getActivity())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    private boolean isIn(String Id){\r\n        for(int i=0;i<showTasks.size();i++){\r\n            if (showTasks.get(i).getTask_id().equals(Id)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private int overdue(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"待质检\")||tasks.get(i).getStatus().equals(\"质检中\")){\r\n                Date beginTime= DateUtils.string2Date(tasks.get(i).getExpected_exam_time(),DateUtils.yyyyMMddHHmmss.get());\r\n                Date endTime= DateUtils.getNowDate();\r\n                if (DateUtils.date2Millis(beginTime) <DateUtils.date2Millis( endTime)) {\r\n                    res++;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/CheckManagerFragment_1.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/CheckManagerFragment_1.java	(date 1614153863288)
@@ -145,7 +145,7 @@
     }
     private void refresh(){
         ArrayList<Task> temp=new ArrayList<Task>();
-        RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+        RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                 .asList(String.class)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(s -> {
Index: app/src/main/res/layout/activity_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n              xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n              xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\"\r\n              android:layout_height=\"match_parent\"\r\n              android:focusable=\"true\"\r\n              android:focusableInTouchMode=\"true\"\r\n              android:orientation=\"vertical\"\r\n              tools:ignore=\"MissingDefaultResource\">\r\n    <androidx.appcompat.widget.AppCompatImageView\r\n            android:layout_width=\"120dp\"\r\n            android:layout_height=\"120dp\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            app:srcCompat=\"@mipmap/ic_launcher_round\" />\r\n\r\n    <TextView\r\n            style=\"@style/TextStyle.Title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:text=\"登 录\"\r\n            android:textSize=\"30sp\" />\r\n\r\n    <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginEnd=\"24dp\"\r\n            android:orientation=\"vertical\">\r\n\r\n        <FrameLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.appcompat.widget.AppCompatImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"start|center_vertical\"\r\n                    android:tint=\"?attr/colorAccent\"\r\n                    app:srcCompat=\"@drawable/ic_phone\" tools:ignore=\"VectorDrawableCompat\"/>\r\n\r\n            <com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText\r\n                    android:id=\"@+id/et_phone_number\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"36dp\"\r\n                    android:hint=\"@string/tip_please_input_phone_number\"\r\n                    android:inputType=\"number\"\r\n                    app:met_clearButton=\"true\"\r\n                    app:met_errorMessage=\"@string/tip_phone_number_error\"\r\n                    app:met_floatingLabel=\"normal\"\r\n                    app:met_floatingLabelText=\"@string/title_phone_number\"\r\n                    app:met_regexp=\"@string/regex_phone_number\" />\r\n\r\n        </FrameLayout>\r\n\r\n\r\n        <FrameLayout\r\n                android:id=\"@+id/fl_verify_code\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginTop=\"12dp\">\r\n\r\n            <androidx.appcompat.widget.AppCompatImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"start|center_vertical\"\r\n                    android:tint=\"?attr/colorAccent\"\r\n                    app:srcCompat=\"@drawable/ic_password\" tools:ignore=\"VectorDrawableCompat\"/>\r\n\r\n            <com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText\r\n                    android:id=\"@+id/et_password\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"36dp\"\r\n                    android:hint=\"请输入密码\"\r\n                    android:inputType=\"number\"\r\n                    app:met_clearButton=\"false\"\r\n                    app:met_errorMessage=\"请输入6位以上的密码\"\r\n                    app:met_floatingLabel=\"normal\"\r\n                    app:met_regexp=\"@string/regex_password\" />\r\n\r\n        </FrameLayout>\r\n\r\n\r\n        <FrameLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n            <com.xuexiang.xui.widget.button.ButtonView\r\n                    android:id=\"@+id/btn_register\"\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_gravity=\"start\"\r\n                    android:paddingStart=\"10dp\"\r\n                    android:paddingTop=\"5dp\"\r\n                    android:paddingEnd=\"10dp\"\r\n                    android:paddingBottom=\"5dp\"\r\n                    android:text=\"还没注册？\"\r\n                    android:textColor=\"?attr/colorAccent\" />\r\n\r\n            <com.xuexiang.xui.widget.alpha.XUIAlphaTextView\r\n                    android:id=\"@+id/tv_forget_password\"\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_gravity=\"end\"\r\n                    android:paddingStart=\"10dp\"\r\n                    android:paddingTop=\"5dp\"\r\n                    android:paddingEnd=\"10dp\"\r\n                    android:paddingBottom=\"5dp\"\r\n                    android:text=\"忘记密码\"\r\n                    android:textColor=\"@color/xui_config_color_primary_text\" />\r\n\r\n        </FrameLayout>\r\n\r\n    </LinearLayout>\r\n\r\n    <com.xuexiang.xui.widget.textview.supertextview.SuperButton\r\n            android:id=\"@+id/btn_login\"\r\n            style=\"@style/SuperButton.Primary.Login\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"登录\" />\r\n\r\n    <FrameLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n        <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"bottom\"\r\n                android:layout_marginBottom=\"20dp\"\r\n                android:gravity=\"center_horizontal\"\r\n                android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"登陆/注册代表您已阅读并同意\"\r\n                    android:textColor=\"@color/xui_config_color_primary_text\" />\r\n\r\n            <com.xuexiang.xui.widget.alpha.XUIAlphaTextView\r\n                    android:id=\"@+id/tv_user_protocol\"\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"用户协议\"\r\n                    android:textColor=\"?attr/colorAccent\" />\r\n\r\n            <TextView\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"和\"\r\n                    android:textColor=\"@color/xui_config_color_primary_text\" />\r\n\r\n            <com.xuexiang.xui.widget.alpha.XUIAlphaTextView\r\n                    android:id=\"@+id/tv_privacy_protocol\"\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"隐私政策\"\r\n                    android:textColor=\"?attr/colorAccent\" />\r\n\r\n        </LinearLayout>\r\n\r\n    </FrameLayout>\r\n\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_login.xml	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/res/layout/activity_login.xml	(date 1614153863292)
@@ -75,7 +75,7 @@
                     android:layout_height="wrap_content"
                     android:layout_marginStart="36dp"
                     android:hint="请输入密码"
-                    android:inputType="number"
+                    android:inputType="textPassword"
                     app:met_clearButton="false"
                     app:met_errorMessage="请输入6位以上的密码"
                     app:met_floatingLabel="normal"
Index: app/src/main/java/com/example/my/fragment/ManagerDetailFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.NoteActivity;\r\nimport com.example.my.listview.Task;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.picker.widget.TimePickerView;\r\nimport com.xuexiang.xui.widget.picker.widget.builder.TimePickerBuilder;\r\nimport com.xuexiang.xui.widget.picker.widget.configure.TimePickerType;\r\nimport com.xuexiang.xui.widget.picker.widget.listener.OnTimeSelectListener;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.TimeZone;\r\n\r\npublic class ManagerDetailFragment extends Fragment {\r\n\tprivate Task item;\r\n\tprivate static final int REQUEST_CODE_ADD = 1002;\r\n\tprivate TimePickerView mTimePickerDialog;\r\n\tpublic static TextView note;\r\n\r\n\t@Override\r\n\tpublic void onCreate(Bundle savedInstanceState) {\r\n\t\tsuper.onCreate(savedInstanceState);\r\n\t\titem = (Task) getArguments().getSerializable(\"task\");\r\n\t}\r\n\r\n\t@Override\r\n\tpublic View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n\t\t\tBundle savedInstanceState) {\r\n\t\tView view = inflater.inflate(R.layout.fragment_manager_detail, container, false);\r\n\t\tTextView tag = view.findViewById(R.id.state);\r\n\t\tTextView name = view.findViewById(R.id.TaskName);\r\n\t\tTextView ddl1=view.findViewById(R.id.ddl1);\r\n\t\tTextView ddl2=view.findViewById(R.id.ddl2);\r\n\t\tTextView tl=view.findViewById(R.id.Teamleader);\r\n\t\tTextView checkman=view.findViewById(R.id.Checkman);\r\n\t\tnote=view.findViewById(R.id.note);\r\n\t\tTextView maketime=view.findViewById(R.id.makeTime);\r\n\t\tTextView finish1=view.findViewById(R.id.finish1);\r\n\t\tTextView finish2=view.findViewById(R.id.finish2);\r\n\t\tname.append(item.getTask_name());\r\n\t\ttag.append(item.getStatus());\r\n\t\tddl1.append(item.getExpected_time());\r\n\t\tddl2.append(item.getExpected_exam_time());\r\n\t\ttl.append(item.getGroup_leader());\r\n\t\tcheckman.append(item.getQuality_inspector());\r\n\t\tnote.append(item.getComments());\r\n\t\tmaketime.append(item.getCreate_time());\r\n\t\tfinish1.append(item.getFinish_time());\r\n\t\tfinish2.append(item.getFinish_exam_time());\r\n\t\tButton button=view.findViewById(R.id.add_button);\r\n\t\tbutton.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View view) {\r\n\t\t\t\tadd();\r\n\t\t\t}\r\n\t\t});\r\n\t\tButton button1=view.findViewById(R.id.edit_button1);\r\n\t\tButton button2=view.findViewById(R.id.edit_button2);\r\n\t\tbutton1.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t//:在此编辑修改完成截止时间的操作\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View view) {\r\n\t\t\t\t\tif (mTimePickerDialog == null) {\r\n\t\t\t\t\t\tCalendar calendar = Calendar.getInstance();\r\n\t\t\t\t\t\tcalendar.setTime(DateUtils.getNowDate());\r\n\t\t\t\t\t\tmTimePickerDialog = new TimePickerBuilder(getContext(), new OnTimeSelectListener() {\r\n\t\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\t\tpublic void onTimeSelected(Date date, View v) {\r\n\t\t\t\t\t\t\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n\t\t\t\t\t\t\t\tdf.setTimeZone(TimeZone.getTimeZone(\"GMT+8:00\"));\r\n\t\t\t\t\t\t\t\tString expected_time=df.format(date);\r\n\t\t\t\t\t\t\t\tRxHttp.postJson(\"http://10.0.2.2:8000/api/task/modifytask\")\r\n\t\t\t\t\t\t\t\t\t\t.add(\"task_id\",item.getTask_id()).add(\"expected_time\",expected_time)\r\n\t\t\t\t\t\t\t\t\t\t.asString()\r\n\t\t\t\t\t\t\t\t\t\t.observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n\t\t\t\t\t\t\t\t\t\t.subscribe(res -> {\r\n\t\t\t\t\t\t\t\t\t\t\tJSONObject j= new JSONObject(res);\r\n\t\t\t\t\t\t\t\t\t\t\tString message =j.getString(\"message\");\r\n\t\t\t\t\t\t\t\t\t\t\tif(!message.equals(\"null\")){\r\n\t\t\t\t\t\t\t\t\t\t\t\tLog.d(\"TAG\", message);\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowSimpleWarningDialog(message);\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\tshowSimpleTipDialog(\"修改成功\");\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, throwable -> {\r\n\t\t\t\t\t\t\t\t\t\t\tshowSimpleWarningDialog(\"网络不良,请重试\");\r\n\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t.setTimeSelectChangeListener(date -> Log.i(\"pvTime\", \"onTimeSelectChanged\"))\r\n\t\t\t\t\t\t\t\t.setType(TimePickerType.ALL)\r\n\t\t\t\t\t\t\t\t.setTitleText(\"时间选择\")\r\n\t\t\t\t\t\t\t\t.isDialog(true)\r\n\t\t\t\t\t\t\t\t.setOutSideCancelable(false)\r\n\t\t\t\t\t\t\t\t.setDate(calendar)\r\n\t\t\t\t\t\t\t\t.build();\r\n\t\t\t\t\t}\r\n\t\t\t\t\tmTimePickerDialog.show();\r\n\t\t\t}\r\n\t\t});\r\n\t\tbutton2.setOnClickListener(new View.OnClickListener() {\r\n\t\t\t@Override\r\n\t\t\tpublic void onClick(View view) {\r\n\t\t\t\tif (mTimePickerDialog == null) {\r\n\t\t\t\t\tCalendar calendar = Calendar.getInstance();\r\n\t\t\t\t\tcalendar.setTime(DateUtils.getNowDate());\r\n\t\t\t\t\tmTimePickerDialog = new TimePickerBuilder(getContext(), new OnTimeSelectListener() {\r\n\t\t\t\t\t\t@Override\r\n\t\t\t\t\t\tpublic void onTimeSelected(Date date, View v) {\r\n\t\t\t\t\t\t\tSimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n\t\t\t\t\t\t\tdf.setTimeZone(TimeZone.getTimeZone(\"GMT+8:00\"));\r\n\t\t\t\t\t\t\tString expected_exam_time=df.format(date);\r\n\t\t\t\t\t\t\tRxHttp.postJson(\"http://10.0.2.2:8000/api/task/modifytask\")\r\n\t\t\t\t\t\t\t\t\t.add(\"task_id\",item.getTask_id()).add(\"expected_exam_time\",expected_exam_time)\r\n\t\t\t\t\t\t\t\t\t.asString()\r\n\t\t\t\t\t\t\t\t\t.observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n\t\t\t\t\t\t\t\t\t.subscribe(res -> {\r\n\t\t\t\t\t\t\t\t\t\tJSONObject j= new JSONObject(res);\r\n\t\t\t\t\t\t\t\t\t\tString message =j.getString(\"message\");\r\n\t\t\t\t\t\t\t\t\t\tif(!message.equals(\"null\")){\r\n\t\t\t\t\t\t\t\t\t\t\tLog.d(\"TAG\", message);\r\n\t\t\t\t\t\t\t\t\t\t\tshowSimpleWarningDialog(message);\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\tshowSimpleTipDialog(\"修改成功\");\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}, throwable -> {\r\n\t\t\t\t\t\t\t\t\t\tshowSimpleWarningDialog(\"网络不良,请重试\");\r\n\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\t\t\t.setTimeSelectChangeListener(date -> Log.i(\"pvTime\", \"onTimeSelectChanged\"))\r\n\t\t\t\t\t\t\t.setType(TimePickerType.ALL)\r\n\t\t\t\t\t\t\t.setTitleText(\"时间选择\")\r\n\t\t\t\t\t\t\t.isDialog(true)\r\n\t\t\t\t\t\t\t.setOutSideCancelable(false)\r\n\t\t\t\t\t\t\t.setDate(calendar)\r\n\t\t\t\t\t\t\t.build();\r\n\t\t\t\t}\r\n\t\t\t\tmTimePickerDialog.show();\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn view;\r\n\t}\r\n\r\n    public static ManagerDetailFragment newInstance(Task item) {\r\n    \tManagerDetailFragment fragmentDemo = new ManagerDetailFragment();\r\n        Bundle args = new Bundle();\r\n        args.putSerializable(\"task\", item);\r\n        fragmentDemo.setArguments(args);\r\n        return fragmentDemo;\r\n    }\r\n\tprivate void add(){\r\n\t\tString s=item.getComments();\r\n\t\tString id=item.getTask_id();\r\n\t\tIntent i=new Intent(getActivity(),NoteActivity.class);\r\n\t\ti.putExtra(\"note\",s);\r\n\t\ti.putExtra(\"id\",id);\r\n\t\tstartActivity(i);\r\n\t}\r\n\tpublic void showSimpleWarningDialog(String message) {\r\n\t\tnew MaterialDialog.Builder(getContext())\r\n\t\t\t\t.iconRes(R.drawable.icon_warning)\r\n\t\t\t\t.title(\"提示\")\r\n\t\t\t\t.content(message)\r\n\t\t\t\t.positiveText(\"确定\")\r\n\t\t\t\t.onPositive(new MaterialDialog.SingleButtonCallback() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n\t\t\t\t\t\tdialog.dismiss();\r\n\t\t\t\t\t\tgetActivity().finish();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.show();\r\n\t}\r\n\tpublic void showSimpleTipDialog(String message) {\r\n\t\tnew MaterialDialog.Builder(getContext())\r\n\t\t\t\t.iconRes(R.drawable.icon_tip)\r\n\t\t\t\t.title(\"提示\")\r\n\t\t\t\t.content(message)\r\n\t\t\t\t.positiveText(\"确定\")\r\n\t\t\t\t.onPositive(new MaterialDialog.SingleButtonCallback() {\r\n\t\t\t\t\t@Override\r\n\t\t\t\t\tpublic void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n\t\t\t\t\t\tdialog.dismiss();\r\n\t\t\t\t\t\tgetActivity().finish();\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.show();\r\n\t}\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/ManagerDetailFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/ManagerDetailFragment.java	(date 1614153927308)
@@ -86,6 +86,7 @@
 						mTimePickerDialog = new TimePickerBuilder(getContext(), new OnTimeSelectListener() {
 							@Override
 							public void onTimeSelected(Date date, View v) {
+								ddl1.setText("预计完成时间："+DateUtils.date2String(date, DateUtils.yyyyMMddHHmmss.get()));
 								SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
 								df.setTimeZone(TimeZone.getTimeZone("GMT+8:00"));
 								String expected_time=df.format(date);
@@ -119,6 +120,7 @@
 			}
 		});
 		button2.setOnClickListener(new View.OnClickListener() {
+			//TODO:在此编辑修改质检截止时间的操作
 			@Override
 			public void onClick(View view) {
 				if (mTimePickerDialog == null) {
@@ -127,6 +129,7 @@
 					mTimePickerDialog = new TimePickerBuilder(getContext(), new OnTimeSelectListener() {
 						@Override
 						public void onTimeSelected(Date date, View v) {
+							ddl2.setText("预计质检完成时间："+DateUtils.date2String(date, DateUtils.yyyyMMddHHmmss.get()));
 							SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
 							df.setTimeZone(TimeZone.getTimeZone("GMT+8:00"));
 							String expected_exam_time=df.format(date);
Index: app/src/main/res/layout/fragment_teamleader_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<RelativeLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:layout_marginStart=\"20dp\">\r\n\r\n    <TextView\r\n        android:id=\"@+id/TaskName\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_marginTop=\"20dp\"\r\n        android:textAppearance=\"?android:attr/textAppearanceLarge\" />\r\n    <TextView\r\n        android:id=\"@+id/makeTime\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/TaskName\"\r\n        android:layout_marginTop=\"19dp\"\r\n        android:text=\"创建时间\" />\r\n    <TextView\r\n        android:id=\"@+id/ddl1\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/makeTime\"\r\n        android:layout_marginTop=\"19dp\"\r\n        android:text=\"完成截止时间：\" />\r\n    <TextView\r\n        android:id=\"@+id/note\"\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:layout_below=\"@+id/ddl1\"\r\n        android:layout_marginTop=\"19dp\"\r\n        android:text=\"备注：\" />\r\n    <Button\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/add_button\"\r\n        android:layout_below=\"@+id/note\"\r\n        android:layout_marginTop=\"19dp\"\r\n        android:background=\"@drawable/tag\"\r\n        android:textColor=\"@color/blue_start\"\r\n        android:text=\"添加备注\">\r\n    </Button>\r\n    <Button\r\n        android:layout_width=\"wrap_content\"\r\n        android:layout_height=\"wrap_content\"\r\n        android:id=\"@+id/submit\"\r\n        android:layout_below=\"@+id/add_button\"\r\n        android:layout_marginTop=\"19dp\"\r\n        android:background=\"@drawable/tag\"\r\n        android:textColor=\"@color/blue_start\"\r\n        android:text=\"递交质检部\">\r\n    </Button>\r\n\r\n</RelativeLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/fragment_teamleader_detail.xml	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/res/layout/fragment_teamleader_detail.xml	(date 1614153927329)
@@ -16,7 +16,7 @@
         android:layout_height="wrap_content"
         android:layout_below="@+id/TaskName"
         android:layout_marginTop="19dp"
-        android:text="创建时间" />
+        android:text="创建时间：" />
     <TextView
         android:id="@+id/ddl1"
         android:layout_width="wrap_content"
Index: app/src/main/java/com/example/my/fragment/ExecutorDetailFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.NoteActivity;\r\nimport com.example.my.listview.Task;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class ExecutorDetailFragment extends Fragment {\r\n    private Task item;\r\n    private static final int REQUEST_CODE_ADD = 1002;\r\n    public static TextView note;\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        item = (Task) getArguments().getSerializable(\"task\");\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_executor_detail, container, false);\r\n        TextView name = view.findViewById(R.id.TaskName);\r\n        TextView ddl1=view.findViewById(R.id.ddl1);\r\n        TextView ddl2=view.findViewById(R.id.ddl2);\r\n        TextView tl=view.findViewById(R.id.Teamleader);\r\n        TextView checkman=view.findViewById(R.id.Checkman);\r\n        note=view.findViewById(R.id.note);\r\n        TextView maketime=view.findViewById(R.id.makeTime);\r\n        TextView finish1=view.findViewById(R.id.finish1);\r\n        TextView finish2=view.findViewById(R.id.finish2);\r\n        name.append(item.getTask_name());\r\n        ddl1.append(item.getExpected_time());\r\n        ddl2.append(item.getExpected_exam_time());\r\n        tl.append(item.getGroup_leader());\r\n        checkman.append(item.getQuality_inspector());\r\n        note.append(item.getComments());\r\n        maketime.append(item.getCreate_time());\r\n        finish1.append(item.getFinish_time());\r\n        finish2.append(item.getFinish_exam_time());\r\n        Button button=view.findViewById(R.id.add_button);\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                add();\r\n            }\r\n        });\r\n        Button button1=view.findViewById(R.id.submit);\r\n        button1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                RxHttp.postJson(\"http://10.0.2.2:8000/api/task/modifytask\")\r\n                        .add(\"task_id\",item.getTask_id()).add(\"status\",\"submitted\")\r\n                        .asString()\r\n                        .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                        .subscribe(res -> {\r\n                            JSONObject j= new JSONObject(res);\r\n                            String message =j.getString(\"message\");\r\n                            if(!message.equals(\"null\")){\r\n                                Log.d(\"TAG\", message);\r\n                                showSimpleWarningDialog(message);\r\n                            }else{\r\n                                showSimpleTipDialog(\"提交成功\");\r\n                            }\r\n                        }, throwable -> {\r\n                            showSimpleWarningDialog(\"网络不良,请重试\");\r\n                        });\r\n                //getActivity().finish();\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n    public static ExecutorDetailFragment newInstance(Task item) {\r\n        ExecutorDetailFragment fragmentDemo = new ExecutorDetailFragment();\r\n        Bundle args = new Bundle();\r\n        args.putSerializable(\"task\", item);\r\n        fragmentDemo.setArguments(args);\r\n        return fragmentDemo;\r\n    }\r\n    private void add(){\r\n        String note=item.getComments();\r\n        String id=item.getTask_id();\r\n        Intent i=new Intent(getActivity(),NoteActivity.class);\r\n        i.putExtra(\"note\",note);\r\n        i.putExtra(\"id\",id);\r\n        startActivity(i);\r\n    }\r\n\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        getActivity().finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/ExecutorDetailFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/ExecutorDetailFragment.java	(date 1614153927335)
@@ -64,7 +64,7 @@
         button1.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                RxHttp.postJson("http://10.0.2.2:8000/api/task/modifytask")
+                RxHttp.postJson("http://192.168.1.106:8000/api/task/modifytask")
                         .add("task_id",item.getTask_id()).add("status","submitted")
                         .asString()
                         .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
Index: app/src/main/java/com/example/my/fragment/VerifyFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.NoteActivity;\r\nimport com.example.my.listview.Task;\r\nimport com.example.my.listview.User;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.picker.widget.OptionsPickerView;\r\nimport com.xuexiang.xui.widget.picker.widget.builder.OptionsPickerBuilder;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\nimport com.example.my.utils.roleConvert;\r\n\r\npublic class VerifyFragment extends Fragment {\r\n    private User item;\r\n    private static final int REQUEST_CODE_ADD = 1003;\r\n    private String[] Result;\r\n    private int resultSelectOption = 0;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        item = (User) getArguments().getSerializable(\"user\");\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_verify_detail, container, false);\r\n        TextView name=view.findViewById(R.id.name);\r\n        TextView role=view.findViewById(R.id.role);\r\n        TextView phone=view.findViewById(R.id.phone);\r\n        Button button=view.findViewById(R.id.submit);\r\n        name.append(item.getName());\r\n        role.append(item.getRole());\r\n        phone.append(item.getPhone());\r\n        Result= new String[]{\"通过\", \"不通过\"};\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                OptionsPickerView pvOptions = new OptionsPickerBuilder(getActivity(), (v, options1, options2, options3) -> {\r\n                    resultSelectOption = options1;\r\n                    if(resultSelectOption==1){\r\n                        RxHttp.get(\"http://10.0.2.2:8000/api/user/\"+item.getPhone()+\"/drop\")\r\n                                .asString()\r\n                                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                                .subscribe(res -> {\r\n                                    JSONObject j= new JSONObject(res);\r\n                                    String message =j.getString(\"message\");\r\n                                    if(!message.equals(\"null\")){\r\n                                        Log.d(\"TAG\", message);\r\n                                        showSimpleWarningDialog(message);\r\n                                    }else{\r\n                                        showSimpleTipDialog(\"审核成功\");\r\n                                    }\r\n                                }, throwable -> {\r\n                                    showSimpleWarningDialog(\"网络不良,请重试\");\r\n                                });\r\n                    }\r\n                    else{\r\n                        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/changePos\")\r\n                            .add(\"phone\",item.getPhone()).add(\"newPos\",roleConvert.roleCNToEng(item.getRole()))\r\n                            .asString()\r\n                            .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                            .subscribe(res -> {\r\n                                JSONObject j= new JSONObject(res);\r\n                                String message =j.getString(\"message\");\r\n                                if(!message.equals(\"null\")){\r\n                                    Log.d(\"TAG\", message);\r\n                                    showSimpleWarningDialog(message);\r\n                                }else{\r\n                                    showSimpleTipDialog(\"审核成功\");\r\n                                }\r\n                            }, throwable -> {\r\n                                showSimpleWarningDialog(\"网络不良,请重试\");\r\n                            });\r\n                    }\r\n                    return false;\r\n                })\r\n                        .setTitleText(\"检查结果\")\r\n                        .setSelectOptions(resultSelectOption)\r\n                        .build();\r\n                pvOptions.setPicker(Result);\r\n                pvOptions.show();\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n    public static VerifyFragment newInstance(User item) {\r\n        VerifyFragment fragmentDemo = new VerifyFragment();\r\n        Bundle args = new Bundle();\r\n        args.putSerializable(\"user\", item);\r\n        fragmentDemo.setArguments(args);\r\n        return fragmentDemo;\r\n    }\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        getActivity().finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        getActivity().finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/VerifyFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/VerifyFragment.java	(date 1614153927341)
@@ -53,7 +53,7 @@
                 OptionsPickerView pvOptions = new OptionsPickerBuilder(getActivity(), (v, options1, options2, options3) -> {
                     resultSelectOption = options1;
                     if(resultSelectOption==1){
-                        RxHttp.get("http://10.0.2.2:8000/api/user/"+item.getPhone()+"/drop")
+                        RxHttp.get("http://192.168.1.106:8000/api/user/"+item.getPhone()+"/drop")
                                 .asString()
                                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
                                 .subscribe(res -> {
@@ -70,7 +70,7 @@
                                 });
                     }
                     else{
-                        RxHttp.postJson("http://10.0.2.2:8000/api/user/changePos")
+                        RxHttp.postJson("http://192.168.1.106:8000/api/user/changePos")
                             .add("phone",item.getPhone()).add("newPos",roleConvert.roleCNToEng(item.getRole()))
                             .asString()
                             .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
Index: app/src/main/java/com/example/my/fragment/CheckmanDetailFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.AddTaskActivity;\r\nimport com.example.my.activity.NoteActivity;\r\nimport com.example.my.listview.Task;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.picker.widget.OptionsPickerView;\r\nimport com.xuexiang.xui.widget.picker.widget.builder.OptionsPickerBuilder;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.Date;\r\nimport java.util.TimeZone;\r\n\r\npublic class CheckmanDetailFragment extends Fragment {\r\n    private Task item;\r\n    private String[] Result;\r\n    private int resultSelectOption = 0;\r\n    private static final int REQUEST_CODE_ADD = 1002;\r\n    public static TextView note;\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        item = (Task) getArguments().getSerializable(\"task\");\r\n    }\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_checkman_detail, container, false);\r\n        TextView name = view.findViewById(R.id.TaskName);\r\n        TextView ddl2=view.findViewById(R.id.ddl2);\r\n        TextView tl=view.findViewById(R.id.Teamleader);\r\n        note=view.findViewById(R.id.note);\r\n        TextView maketime=view.findViewById(R.id.makeTime);\r\n        TextView finish1=view.findViewById(R.id.finish1);\r\n        name.append(item.getTask_name());\r\n        ddl2.append(item.getExpected_exam_time());\r\n        tl.append(item.getGroup_leader());\r\n        note.append(item.getComments());\r\n        maketime.append(item.getCreate_time());\r\n        finish1.append(item.getFinish_time());\r\n        Button button=view.findViewById(R.id.add_button);\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                add();\r\n            }\r\n        });\r\n        Button submit=view.findViewById(R.id.submit);\r\n        Result= new String[]{\"合格\", \"不合格\"};\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                OptionsPickerView pvOptions = new OptionsPickerBuilder(getActivity(), (v, options1, options2, options3) -> {\r\n                    resultSelectOption = options1;\r\n                    String status=\"wait_submit\";\r\n                    if(resultSelectOption==1) status=\"fail\";\r\n                    Date time=new Date();\r\n                    SimpleDateFormat df = new SimpleDateFormat(\"yyyy-MM-dd HH:mm:ss\");\r\n                    df.setTimeZone(TimeZone.getTimeZone(\"GMT+8:00\"));\r\n                    String finish_exam_time=df.format(time);\r\n                    RxHttp.postJson(\"http://10.0.2.2:8000/api/task/modifytask\")\r\n                            .add(\"task_id\",item.getTask_id()).add(\"status\",status).add(\"finish_exam_time\",finish_exam_time)\r\n                            .asString()\r\n                            .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                            .subscribe(res -> {\r\n                                JSONObject j= new JSONObject(res);\r\n                                String message =j.getString(\"message\");\r\n                                if(!message.equals(\"null\")){\r\n                                    Log.d(\"TAG\", message);\r\n                                    showSimpleWarningDialog(message);\r\n                                }else{\r\n                                    showSimpleTipDialog(\"提交成功\");\r\n                                }\r\n                            }, throwable -> {\r\n                                showSimpleWarningDialog(\"网络不良,请重试\");\r\n                            });\r\n                    return false;\r\n                })\r\n                        .setTitleText(\"检查结果\")\r\n                        .setSelectOptions(resultSelectOption)\r\n                        .build();\r\n                pvOptions.setPicker(Result);\r\n                pvOptions.show();\r\n            }\r\n        });\r\n        return view;\r\n    }\r\n\r\n    public static CheckmanDetailFragment newInstance(Task item) {\r\n        CheckmanDetailFragment fragmentDemo = new CheckmanDetailFragment();\r\n        Bundle args = new Bundle();\r\n        args.putSerializable(\"task\", item);\r\n        fragmentDemo.setArguments(args);\r\n        return fragmentDemo;\r\n    }\r\n    private void add(){\r\n        String note=item.getComments();\r\n        String id=item.getTask_id();\r\n        Intent i=new Intent(getActivity(),NoteActivity.class);\r\n        i.putExtra(\"note\",note);\r\n        i.putExtra(\"id\",id);\r\n        startActivity(i);\r\n    }\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(getContext())\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        getActivity().finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/CheckmanDetailFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/CheckmanDetailFragment.java	(date 1614153927346)
@@ -75,7 +75,7 @@
                     SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                     df.setTimeZone(TimeZone.getTimeZone("GMT+8:00"));
                     String finish_exam_time=df.format(time);
-                    RxHttp.postJson("http://10.0.2.2:8000/api/task/modifytask")
+                    RxHttp.postJson("http://192.168.1.106:8000/api/task/modifytask")
                             .add("task_id",item.getTask_id()).add("status",status).add("finish_exam_time",finish_exam_time)
                             .asString()
                             .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
Index: app/src/main/java/com/example/my/fragment/CheckmanFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.app.Activity;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.adapter.TaskAdapter;\r\nimport com.example.my.listview.Task;\r\nimport com.scwang.smartrefresh.layout.api.RefreshLayout;\r\nimport com.scwang.smartrefresh.layout.listener.OnRefreshListener;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.spinner.materialspinner.MaterialSpinner;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport rxhttp.RxHttp;\r\n\r\nimport static com.xuexiang.xutil.data.SPUtils.getSharedPreferences;\r\n\r\npublic class CheckmanFragment extends Fragment {\r\n    private static final Object MODE_PRIVATE = 0;\r\n    private ArrayList<Task> tasks;\r\n    private ArrayList<Task> showTasks;\r\n    private ArrayAdapter<Task> adapterItems;\r\n    private OnItemSelectedListener listener;\r\n    private TextView text;\r\n    private String id;\r\n    private RefreshLayout refreshLayout;\r\n\r\n    public interface OnItemSelectedListener {\r\n        public void onItemSelected(Task i);\r\n    }\r\n\r\n    public static CheckmanFragment newInstance(String Checkman,ArrayList<Task> all) {\r\n        CheckmanFragment mf = new CheckmanFragment();\r\n        mf.tasks=new ArrayList<Task>(all);\r\n        Bundle args = new Bundle();\r\n        mf.setArguments(args);\r\n        return mf;\r\n    }\r\n    @Override\r\n    public void onAttach(Activity activity) {\r\n        super.onAttach(activity);\r\n        if (activity instanceof CheckmanFragment.OnItemSelectedListener) {\r\n            listener = (CheckmanFragment.OnItemSelectedListener) activity;\r\n        } else {\r\n            throw new ClassCastException(activity.toString()\r\n                    + \" must implement ItemsListFragment.OnItemSelectedListener\");\r\n        }\r\n    }\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Create arraylist from item fixtures\r\n        showTasks=new ArrayList<Task>();\r\n        adapterItems = new TaskAdapter(getActivity(),\r\n                R.layout.list_item, showTasks);\r\n        id=getActivity().getIntent().getStringExtra(\"id\");\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.autoRefresh();\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                refresh();\r\n                refreshLayout.getLayout().postDelayed(() -> {\r\n                    getall();\r\n                    adapterItems.notifyDataSetChanged();\r\n                    refreshLayout.finishRefresh();\r\n                    refreshLayout.resetNoMoreData();//setNoMoreData(false);\r\n                }, 2000);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view=inflater.inflate(R.layout.fragment_checkman, container, false);\r\n        text=view.findViewById(R.id.mnum);\r\n        ListView lvItems = (ListView) view.findViewById(R.id.mlist);\r\n        lvItems.setAdapter(adapterItems);\r\n        lvItems.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View item, int position,\r\n                                    long rowId) {\r\n                // Retrieve item based on position\r\n                Task i = adapterItems.getItem(position);\r\n                // Fire selected event for item\r\n                listener.onItemSelected(i);\r\n\r\n            }\r\n        });\r\n        refreshLayout=view.findViewById(R.id.refreshlayout);\r\n        return view;\r\n    }\r\n    private void getall(){\r\n        int size=showTasks.size();\r\n        int t=0;\r\n        while(t<size){\r\n            showTasks.remove(t);\r\n            size--;\r\n        }\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(!isIn(tasks.get(i).getTask_id())){\r\n                showTasks.add(tasks.get(i));\r\n            }\r\n        }\r\n        text.setText(\"\"+overdue());\r\n        update(\"质检中\");\r\n    }\r\n    private void refresh(){\r\n        ArrayList<Task> temp=new ArrayList<Task>();\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                .asList(String.class)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(s -> {\r\n                    Log.d(\"TAG\", s.get(0).toString());\r\n                    for (String value : s) {\r\n                        JSONObject js = new JSONObject(value);\r\n                        Task t = new Task(js.getString(\"task_id\"), js.getString(\"task_name\"), js.getString(\"group_leader\"),\r\n                                js.getString(\"quality_inspector\"), js.getString(\"expected_time\"),\r\n                                js.getString(\"expected_exam_time\"), js.getString(\"create_time\"), js.getString(\"status\"),\r\n                                js.getString(\"comments\"), js.getString(\"finish_time\"), js.getString(\"finish_exam_time\"));\r\n                        if(t.getQuality_inspector().equals(id));\r\n                        temp.add(t);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"获取任务列表失败\");\r\n                });\r\n        tasks=temp;\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getActivity())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    private boolean isIn(String Id){\r\n        for(int i=0;i<showTasks.size();i++){\r\n            if (showTasks.get(i).getTask_id().equals(Id)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private void update(String s){\r\n        Log.d(\"abc\", s);\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(s)){\r\n                Log.d(tasks.get(i).getStatus(), s);\r\n                if(!isIn(tasks.get(i).getTask_id())){\r\n                    showTasks.add(tasks.get(i));\r\n                }\r\n            }\r\n            if(!tasks.get(i).getStatus().equals(s)){\r\n                showTasks.remove(tasks.get(i));\r\n            }\r\n        }\r\n    }\r\n    private int overdue(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"质检中\")){\r\n                Date beginTime= DateUtils.string2Date(tasks.get(i).getExpected_exam_time(),DateUtils.yyyyMMddHHmmss.get());\r\n                Date endTime= DateUtils.getNowDate();\r\n                if (DateUtils.date2Millis(beginTime) <DateUtils.date2Millis( endTime)) {\r\n                    res++;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/CheckmanFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/CheckmanFragment.java	(date 1614153927350)
@@ -133,7 +133,7 @@
     }
     private void refresh(){
         ArrayList<Task> temp=new ArrayList<Task>();
-        RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+        RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                 .asList(String.class)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(s -> {
Index: app/src/main/res/layout/activity_register.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n              xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n              xmlns:tools=\"http://schemas.android.com/tools\" android:layout_width=\"match_parent\"\r\n              android:layout_height=\"match_parent\"\r\n              android:focusable=\"true\"\r\n              android:focusableInTouchMode=\"true\"\r\n              android:orientation=\"vertical\" tools:ignore=\"MissingDefaultResource\">\r\n    <androidx.appcompat.widget.AppCompatImageView\r\n            android:layout_width=\"120dp\"\r\n            android:layout_height=\"120dp\"\r\n            android:layout_gravity=\"center_horizontal\"\r\n            app:srcCompat=\"@mipmap/ic_launcher_round\" />\r\n    <TextView\r\n            style=\"@style/TextStyle.Title\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_marginTop=\"10dp\"\r\n            android:text=\"注 册\"\r\n            android:textSize=\"30sp\" />\r\n    <LinearLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:layout_marginStart=\"24dp\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:layout_marginEnd=\"24dp\"\r\n            android:orientation=\"vertical\">\r\n        <FrameLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n            <androidx.appcompat.widget.AppCompatImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"start|center_vertical\"\r\n                    android:tint=\"?attr/colorAccent\"\r\n                    app:srcCompat=\"@drawable/ic_phone\" tools:ignore=\"VectorDrawableCompat\"/>\r\n            <com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText\r\n                    android:id=\"@+id/et_phone_number\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"36dp\"\r\n                    android:hint=\"@string/tip_please_input_phone_number\"\r\n                    android:inputType=\"number\"\r\n                    app:met_clearButton=\"true\"\r\n                    app:met_errorMessage=\"@string/tip_phone_number_error\"\r\n                    app:met_floatingLabel=\"normal\"\r\n                    app:met_floatingLabelText=\"@string/title_phone_number\"\r\n                    app:met_regexp=\"@string/regex_phone_number\" />\r\n        </FrameLayout>\r\n        <FrameLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.appcompat.widget.AppCompatImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"start|center_vertical\"\r\n                    android:tint=\"?attr/colorAccent\"\r\n                    app:srcCompat=\"@drawable/ic_type_grid\" tools:ignore=\"VectorDrawableCompat\"/>\r\n            <com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText\r\n                    android:id=\"@+id/et_user_id\"\r\n                    android:layout_width=\"match_parent\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_marginStart=\"36dp\"\r\n                    android:hint=\"请输入用户名\"\r\n                    android:inputType=\"text\"\r\n                    app:met_clearButton=\"true\"\r\n                    app:met_errorMessage=\"用户名不符合规范\"\r\n                    app:met_floatingLabel=\"normal\"\r\n                    app:met_floatingLabelText=\"用户名\"/>\r\n        </FrameLayout>\r\n        <FrameLayout\r\n            android:id=\"@+id/fl_new_code\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n            <androidx.appcompat.widget.AppCompatImageView\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:layout_height=\"wrap_content\"\r\n                    android:layout_gravity=\"start|center_vertical\"\r\n                    android:tint=\"?attr/colorAccent\"\r\n                    app:srcCompat=\"@drawable/ic_password\"/>\r\n\r\n            <com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText\r\n                android:id=\"@+id/et_new_code\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"start|center_vertical\"\r\n                android:layout_marginStart=\"36dp\"\r\n                android:hint=\"请输入密码\"\r\n                android:inputType=\"textPassword\"\r\n                app:met_clearButton=\"false\"\r\n                app:met_errorMessage=\"密码格式错误\"\r\n                app:met_floatingLabel=\"normal\"\r\n                app:met_floatingLabelText=\"您的密码\"\r\n                app:met_regexp=\"@string/regex_password\" />\r\n        </FrameLayout>\r\n\r\n        <FrameLayout\r\n            android:id=\"@+id/fl_confirm_code\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n            <androidx.appcompat.widget.AppCompatImageView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"start|center_vertical\"\r\n                android:tint=\"?attr/colorAccent\"\r\n                app:srcCompat=\"@drawable/ic_password\"/>\r\n\r\n            <com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText\r\n                android:id=\"@+id/et_confirm_code\"\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"36dp\"\r\n                android:hint=\"请确认输入的密码\"\r\n                android:inputType=\"textPassword\"\r\n                app:met_clearButton=\"false\"\r\n                app:met_errorMessage=\"两次输入密码不同\"\r\n                app:met_floatingLabel=\"normal\"\r\n                app:met_floatingLabelText=\"再次确认密码\"\r\n                app:met_regexp=\"@string/regex_password\" />\r\n        </FrameLayout>\r\n        <FrameLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n\r\n            <androidx.appcompat.widget.AppCompatImageView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"start|center_vertical\"\r\n                android:tint=\"?attr/colorAccent\"\r\n                app:srcCompat=\"@drawable/ic_type_list\" tools:ignore=\"VectorDrawableCompat\"/>\r\n            <com.xuexiang.xui.widget.spinner.materialspinner.MaterialSpinner\r\n                android:id=\"@+id/spinner\"\r\n                style=\"@style/Material.SpinnerStyle\"\r\n                android:layout_marginStart=\"40dp\"\r\n                android:layout_marginTop=\"?attr/xui_config_content_spacing_vertical\"\r\n                android:hint=\"请选择申请的角色\"\r\n                app:ms_entries=\"@array/role\"\r\n                />\r\n        </FrameLayout>\r\n\r\n\r\n    </LinearLayout>\r\n    <com.xuexiang.xui.widget.textview.supertextview.SuperButton\r\n            android:id=\"@+id/btn_register\"\r\n            style=\"@style/SuperButton.Primary.Login\"\r\n            android:layout_marginTop=\"16dp\"\r\n            android:text=\"注册\" />\r\n\r\n    <FrameLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n        <LinearLayout\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"bottom\"\r\n                android:layout_marginBottom=\"20dp\"\r\n                android:gravity=\"center_horizontal\"\r\n                android:orientation=\"horizontal\">\r\n\r\n            <TextView\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"登陆/注册代表您已阅读并同意\"\r\n                    android:textColor=\"@color/xui_config_color_primary_text\" />\r\n\r\n            <com.xuexiang.xui.widget.alpha.XUIAlphaTextView\r\n                    android:id=\"@+id/tv_user_protocol\"\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"用户协议\"\r\n                    android:textColor=\"?attr/colorAccent\" />\r\n\r\n            <TextView\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"和\"\r\n                    android:textColor=\"@color/xui_config_color_primary_text\" />\r\n\r\n            <com.xuexiang.xui.widget.alpha.XUIAlphaTextView\r\n                    android:id=\"@+id/tv_privacy_protocol\"\r\n                    style=\"@style/TextStyle.Explain\"\r\n                    android:layout_width=\"wrap_content\"\r\n                    android:text=\"隐私政策\"\r\n                    android:textColor=\"?attr/colorAccent\" />\r\n\r\n        </LinearLayout>\r\n\r\n    </FrameLayout>\r\n\r\n</LinearLayout>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_register.xml	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/res/layout/activity_register.xml	(date 1614153927359)
@@ -62,7 +62,7 @@
                     android:layout_width="match_parent"
                     android:layout_height="wrap_content"
                     android:layout_marginStart="36dp"
-                    android:hint="请输入用户名"
+                    android:hint="请实名"
                     android:inputType="text"
                     app:met_clearButton="true"
                     app:met_errorMessage="用户名不符合规范"
Index: app/src/main/java/com/example/my/fragment/ProductorFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ListView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.AddTaskActivity;\r\nimport com.example.my.activity.NoteActivity;\r\nimport com.example.my.adapter.TaskAdapter;\r\nimport com.example.my.listview.Task;\r\nimport com.scwang.smartrefresh.layout.api.RefreshLayout;\r\nimport com.scwang.smartrefresh.layout.listener.OnRefreshListener;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.spinner.materialspinner.MaterialSpinner;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class ProductorFragment extends Fragment {\r\n    private ArrayList<Task> tasks;\r\n    private ArrayList<Task> showTasks;\r\n    private ArrayAdapter<Task> adapterItems;\r\n    private OnItemSelectedListener listener;\r\n    private MaterialSpinner mMaterialSpinner;\r\n    private TextView text1;\r\n    private TextView text2;\r\n    private RefreshLayout refreshLayout;\r\n    private static final int REQUEST_CODE_ADD_TASK = 1003;\r\n\r\n    public interface OnItemSelectedListener {\r\n        public void onItemSelected(Task i);\r\n    }\r\n    //后续在此传参给fragment\r\n    public static ProductorFragment newInstance(ArrayList<Task> tasks) {\r\n        ProductorFragment mf = new ProductorFragment();\r\n        mf.tasks=tasks;\r\n        Bundle args = new Bundle();\r\n        mf.setArguments(args);\r\n        return mf;\r\n    }\r\n\r\n    @Override\r\n    public void onAttach(Activity activity) {\r\n        super.onAttach(activity);\r\n        if (activity instanceof ProductorFragment.OnItemSelectedListener) {\r\n            listener = (ProductorFragment.OnItemSelectedListener) activity;\r\n        } else {\r\n            throw new ClassCastException(activity.toString()\r\n                    + \" must implement ItemsListFragment.OnItemSelectedListener\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Create arraylist from item fixtures\r\n        showTasks=new ArrayList<Task>();\r\n        adapterItems = new TaskAdapter(getActivity(),\r\n                R.layout.list_item, showTasks);\r\n    }\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.autoRefresh();\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                refresh();\r\n                refreshLayout.getLayout().postDelayed(() -> {\r\n                    getall();\r\n                    adapterItems.notifyDataSetChanged();\r\n                    refreshLayout.finishRefresh();\r\n                    refreshLayout.resetNoMoreData();//setNoMoreData(false);\r\n                }, 2000);\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        Log.d(\"producer\", \"onCreateView: \");\r\n        View view=inflater.inflate(R.layout.fragment_producer, container, false);\r\n        mMaterialSpinner=view.findViewById(R.id.spinner);\r\n        text1=view.findViewById(R.id.pnum1);\r\n        text2=view.findViewById(R.id.pnum2);\r\n        Button addbutton=view.findViewById(R.id.add_button);\r\n        mMaterialSpinner.setOnItemSelectedListener((spinner, position, id, item) ->\r\n        {\r\n            switch(position){\r\n                //很奇怪。。这么写之后调试的时候没有问题，打包成apk使用就显示不了了\r\n                case 0:\r\n                    for(int i=0;i<tasks.size();i++){\r\n                        if(!isIn(tasks.get(i).getTask_id())){\r\n                            showTasks.add(tasks.get(i));\r\n                        }\r\n                    }\r\n                    break;\r\n                case 1:\r\n                    update(\"待完成\");\r\n                    break;\r\n                case 2:\r\n                    update(\"待质检\");\r\n                    break;\r\n                case 3:\r\n                    update(\"质检中\");\r\n                    break;\r\n                case 4:\r\n                    update(\"不合格\");\r\n                    break;\r\n                case 5:\r\n                    update(\"待提交客户\");\r\n                    break;\r\n                case 6:\r\n                    update(\"已提交客户\");\r\n                    break;\r\n            }\r\n            adapterItems.notifyDataSetChanged();\r\n        });\r\n        addbutton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                startActivityForResult(\r\n                        new Intent(getActivity(), AddTaskActivity.class),\r\n                        REQUEST_CODE_ADD_TASK);\r\n            }\r\n        });\r\n        ListView lvItems = (ListView) view.findViewById(R.id.plist);\r\n        lvItems.setAdapter(adapterItems);\r\n        lvItems.setOnItemClickListener((adapterView, item, position, rowId) -> {\r\n            // Retrieve item based on position\r\n            Task i = adapterItems.getItem(position);\r\n            // Fire selected event for item\r\n            listener.onItemSelected(i);\r\n\r\n        });\r\n        refreshLayout=view.findViewById(R.id.refreshlayout);\r\n        return view;\r\n    }\r\n    private void update(String s){\r\n        Log.d(\"abc\", s);\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(s)){\r\n                Log.d(tasks.get(i).getStatus(), s);\r\n                if(!isIn(tasks.get(i).getTask_id())){\r\n                    showTasks.add(tasks.get(i));\r\n                }\r\n            }\r\n            if(!tasks.get(i).getStatus().equals(s)){\r\n                showTasks.remove(tasks.get(i));\r\n            }\r\n        }\r\n    }\r\n    private void getall(){\r\n        int size=showTasks.size();\r\n        int t=0;\r\n        while(t<size){\r\n            showTasks.remove(t);\r\n            size--;\r\n        }\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(!isIn(tasks.get(i).getTask_id())){\r\n                showTasks.add(tasks.get(i));\r\n            }\r\n        }\r\n        text1.setText(\"\"+overdue());\r\n        text2.setText(\"\"+needToDo());\r\n    }\r\n    private void refresh(){\r\n        ArrayList<Task> temp=new ArrayList<Task>();\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                .asList(String.class)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(s -> {\r\n                    Log.d(\"TAG\", s.get(0).toString());\r\n                    for (String value : s) {\r\n                        JSONObject js = new JSONObject(value);\r\n                        Task t = new Task(js.getString(\"task_id\"), js.getString(\"task_name\"), js.getString(\"group_leader\"),\r\n                                js.getString(\"quality_inspector\"), js.getString(\"expected_time\"),\r\n                                js.getString(\"expected_exam_time\"), js.getString(\"create_time\"), js.getString(\"status\"),\r\n                                js.getString(\"comments\"), js.getString(\"finish_time\"), js.getString(\"finish_exam_time\"));\r\n                        temp.add(t);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"获取任务列表失败\");\r\n                });\r\n        mMaterialSpinner.setSelectedIndex(0);\r\n        tasks=temp;\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getActivity())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    private boolean isIn(String Id){\r\n        for(int i=0;i<showTasks.size();i++){\r\n            if (showTasks.get(i).getTask_id().equals(Id)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private int overdue(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"待完成\")){\r\n                Date beginTime= DateUtils.string2Date(tasks.get(i).getExpected_time(),DateUtils.yyyyMMddHHmmss.get());\r\n                Date endTime= DateUtils.getNowDate();\r\n                if (DateUtils.date2Millis(beginTime) <DateUtils.date2Millis( endTime)) {\r\n                    res++;\r\n                }\r\n            }\r\n            if(tasks.get(i).getStatus().equals(\"待质检\")||tasks.get(i).getStatus().equals(\"质检中\")){\r\n                Date beginTime= DateUtils.string2Date(tasks.get(i).getExpected_exam_time(),DateUtils.yyyyMMddHHmmss.get());\r\n                Date endTime= DateUtils.getNowDate();\r\n                if (DateUtils.date2Millis(beginTime) <DateUtils.date2Millis( endTime)) {\r\n                    res++;\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    private int needToDo(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"待完成\")){\r\n                res++;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/ProductorFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/ProductorFragment.java	(date 1614153927365)
@@ -192,7 +192,7 @@
     }
     private void refresh(){
         ArrayList<Task> temp=new ArrayList<Task>();
-        RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+        RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                 .asList(String.class)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(s -> {
Index: app/src/main/java/com/example/my/fragment/ExecutorFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.fragment;\r\n\r\nimport android.app.Activity;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.activity.VerifyActivity;\r\nimport com.example.my.adapter.TaskAdapter;\r\nimport com.example.my.listview.Task;\r\nimport com.scwang.smartrefresh.layout.api.RefreshLayout;\r\nimport com.scwang.smartrefresh.layout.listener.OnRefreshListener;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.spinner.materialspinner.MaterialSpinner;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\n\r\nimport org.json.JSONObject;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class ExecutorFragment extends Fragment {\r\n    private ArrayList<Task> tasks;\r\n    private ArrayList<Task> showTasks;\r\n    private ArrayAdapter<Task> adapterItems;\r\n    private OnItemSelectedListener listener;\r\n    private MaterialSpinner mMaterialSpinner;\r\n    private TextView text;\r\n    private RefreshLayout refreshLayout;\r\n\r\n    public interface OnItemSelectedListener {\r\n        public void onItemSelected(Task i);\r\n    }\r\n\r\n    public static ExecutorFragment newInstance(ArrayList<Task> all) {\r\n        ExecutorFragment mf = new ExecutorFragment();\r\n        mf.tasks=all;\r\n//        for(int i=0;i<all.size();i++){\r\n//            if(all.get(i).getStatus().equals(\"待提交客户\") ||all.get(i).getStatus().equals(\"已提交客户\")){\r\n//                mf.tasks.add(all.get(i));\r\n//            }\r\n//        }\r\n\r\n        Bundle args = new Bundle();\r\n        mf.setArguments(args);\r\n        return mf;\r\n    }\r\n    @Override\r\n    public void onAttach(Activity activity) {\r\n        super.onAttach(activity);\r\n        if (activity instanceof ExecutorFragment.OnItemSelectedListener) {\r\n            listener = (ExecutorFragment.OnItemSelectedListener) activity;\r\n        } else {\r\n            throw new ClassCastException(activity.toString()\r\n                    + \" must implement ItemsListFragment.OnItemSelectedListener\");\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        // Create arraylist from item fixtures\r\n        showTasks=new ArrayList<Task>();\r\n        adapterItems = new TaskAdapter(getActivity(),\r\n                R.layout.list_item, showTasks);\r\n    }\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        refreshLayout.setEnableAutoLoadMore(true);\r\n        refreshLayout.autoRefresh();\r\n        refreshLayout.setOnRefreshListener(new OnRefreshListener() {\r\n            @Override\r\n            public void onRefresh(@NonNull RefreshLayout refreshLayout) {\r\n                refresh();\r\n                refreshLayout.getLayout().postDelayed(() -> {\r\n                    getall();\r\n                    adapterItems.notifyDataSetChanged();\r\n                    refreshLayout.finishRefresh();\r\n                    refreshLayout.resetNoMoreData();//setNoMoreData(false);\r\n                }, 2000);\r\n            }\r\n        });\r\n    }\r\n    @Override\r\n    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view=inflater.inflate(R.layout.fragment_executor, container, false);\r\n        mMaterialSpinner=view.findViewById(R.id.spinner);\r\n        text=view.findViewById(R.id.mnum);\r\n\r\n        mMaterialSpinner.setOnItemSelectedListener((spinner, position, id, item) ->\r\n        {\r\n            switch(position){\r\n                case 0:\r\n                    update(\"待提交客户\");\r\n                    break;\r\n                case 1:\r\n                    update(\"已提交客户\");\r\n                    break;\r\n            }\r\n            adapterItems.notifyDataSetChanged();\r\n        });\r\n        ListView lvItems = (ListView) view.findViewById(R.id.mlist);\r\n        lvItems.setAdapter(adapterItems);\r\n        lvItems.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> adapterView, View item, int position,\r\n                                    long rowId) {\r\n                // Retrieve item based on position\r\n                Task i = adapterItems.getItem(position);\r\n                // Fire selected event for item\r\n                listener.onItemSelected(i);\r\n\r\n            }\r\n        });\r\n        refreshLayout=view.findViewById(R.id.refreshlayout);\r\n        return view;\r\n    }\r\n    private void update(String s){\r\n        Log.d(\"abc\", s);\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(s)){\r\n                Log.d(tasks.get(i).getStatus(), s);\r\n                if(!isIn(tasks.get(i).getTask_id())){\r\n                    showTasks.add(tasks.get(i));\r\n                }\r\n            }\r\n            if(!tasks.get(i).getStatus().equals(s)){\r\n                showTasks.remove(tasks.get(i));\r\n            }\r\n        }\r\n    }\r\n    private void getall(){\r\n        int size=showTasks.size();\r\n        int t=0;\r\n        while(t<size){\r\n            showTasks.remove(t);\r\n            size--;\r\n        }\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(!isIn(tasks.get(i).getTask_id())){\r\n                showTasks.add(tasks.get(i));\r\n            }\r\n        }\r\n        update(\"待提交客户\");\r\n        text.setText(\"\"+needToSubmit());\r\n    }\r\n    private void refresh(){\r\n        ArrayList<Task> temp=new ArrayList<Task>();\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                .asList(String.class)\r\n                .observeOn(AndroidSchedulers.mainThread())\r\n                .subscribe(s -> {\r\n                    Log.d(\"TAG\", s.get(0).toString());\r\n                    for (String value : s) {\r\n                        JSONObject js = new JSONObject(value);\r\n                        Task t = new Task(js.getString(\"task_id\"), js.getString(\"task_name\"), js.getString(\"group_leader\"),\r\n                                js.getString(\"quality_inspector\"), js.getString(\"expected_time\"),\r\n                                js.getString(\"expected_exam_time\"), js.getString(\"create_time\"), js.getString(\"status\"),\r\n                                js.getString(\"comments\"), js.getString(\"finish_time\"), js.getString(\"finish_exam_time\"));\r\n                        temp.add(t);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"获取任务列表失败\");\r\n                });\r\n        mMaterialSpinner.setSelectedIndex(0);\r\n        tasks=temp;\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(getActivity())\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    private boolean isIn(String Id){\r\n        for(int i=0;i<showTasks.size();i++){\r\n            if (showTasks.get(i).getTask_id().equals(Id)){\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    private int needToSubmit(){\r\n        int res=0;\r\n        for(int i=0;i<tasks.size();i++){\r\n            if(tasks.get(i).getStatus().equals(\"待提交客户\")){\r\n                res++;\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/fragment/ExecutorFragment.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/fragment/ExecutorFragment.java	(date 1614153927369)
@@ -163,7 +163,7 @@
     }
     private void refresh(){
         ArrayList<Task> temp=new ArrayList<Task>();
-        RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+        RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                 .asList(String.class)
                 .observeOn(AndroidSchedulers.mainThread())
                 .subscribe(s -> {
Index: app/src/main/java/com/example/my/requests/requests.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.requests;\r\n\r\nimport android.util.Log;\r\nimport com.example.my.activity.testconnect;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport okhttp3.MediaType;\r\nimport okhttp3.RequestBody;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\nimport com.example.chapter3.demo.R;\r\n\r\nimport java.util.List;\r\nimport java.util.concurrent.atomic.AtomicReference;\r\n\r\n\r\npublic class requests {\r\n    static MediaType JSON = MediaType.parse(\"application/json; charset=utf-8\");\r\n\r\n    public static void showSimpleWarningDialog(String message) {\r\n//        new MaterialDialog.Builder(this)\r\n//                .iconRes(R.drawable.icon_warning)\r\n//                .title(\"提示\")\r\n//                .content(message)\r\n//                .positiveText(\"确定\")\r\n//                .show();\r\n    }\r\n    public static void showSimpleTipDialog(String message) {\r\n//        new MaterialDialog.Builder(this)\r\n//                .iconRes(R.drawable.icon_tip)\r\n//                .title(\"提示\")\r\n//                .content(message)\r\n//                .positiveText(\"确定\")\r\n//                .show();\r\n    }\r\n    //@interface 注册\r\n    public static void register(String name,String phone,String password){\r\n\r\n        JSONObject json = new JSONObject();\r\n        try {\r\n            json.put(\"name\", name);\r\n            json.put(\"phone\", phone);\r\n            json.put(\"password\", password);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/register\")\r\n                .addAll(String.valueOf(json))\r\n                .asString()\r\n                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                .subscribe(res -> {\r\n                    JSONObject j= new JSONObject(res);\r\n                    String message =j.getString(\"message\");\r\n                    if(message!=null){\r\n                        Log.d(\"TAG\", message);\r\n                        showSimpleWarningDialog(message);\r\n                    }\r\n                }, throwable -> {\r\n                    //失败回调\r\n                    showSimpleWarningDialog(\"注册失败，请重试\");\r\n                });\r\n    }\r\n\r\n    //@interface 登录\r\n    public static void login(String phone,String password){\r\n        JSONObject json = new JSONObject();\r\n        try {\r\n            json.put(\"phone\", phone);\r\n            json.put(\"password\", password);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/login\")\r\n                .addAll(String.valueOf(json))\r\n                .asString()\r\n                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                .subscribe(res -> {\r\n                    JSONObject j= new JSONObject(res);\r\n                    String message =j.getString(\"message\");\r\n                    if(message!=null){\r\n                        Log.d(\"TAG\", message);\r\n                        showSimpleWarningDialog(message);\r\n                    }\r\n                }, throwable -> {\r\n                    //失败回调\r\n                    showSimpleWarningDialog(\"登录失败，请重试\");\r\n                });\r\n    }\r\n\r\n    //@interface 改变人员职位(用户类别)\r\n    public static void changePos(String phone,String newPos){\r\n        JSONObject json = new JSONObject();\r\n        try {\r\n            json.put(\"phone\", phone);\r\n            json.put(\"newPos\", newPos);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));\r\n        //return testconnect.postRequest(\"http://10.0.2.2:8000/api/user/changePos\",requestBody);\r\n        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/changePos\")\r\n                .addAll(String.valueOf(json))\r\n                .asString()\r\n                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                .subscribe(res -> {\r\n                    JSONObject j= new JSONObject(res);\r\n                    String message =j.getString(\"message\");\r\n                    if(message!=null){\r\n                        Log.d(\"TAG\", message);\r\n                        showSimpleWarningDialog(message);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"请重试\");\r\n                });\r\n    }\r\n\r\n    //@interface 根据类别筛选用户\r\n    public static void filterPosition(String position){\r\n        //testconnect.getRequest(\"http://10.0.2.2:8000/api/user\"+position+\"/filterPosition\");\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/user\"+position+\"/filterPosition\")\r\n                .asList(String.class)\r\n                .subscribe(res->{\r\n                    if(res.size()!=0){\r\n                        Log.d(\"TAG\", res.toString());\r\n                        //后续处理\r\n                    }\r\n                },throwable -> {\r\n\r\n                });\r\n    }\r\n\r\n    //@interface 修改密码\r\n    public static void changePassword(String user_id,String phone,String password,String newPassword){\r\n        JSONObject json = new JSONObject();\r\n        try {\r\n            json.put(\"user_id\",user_id);\r\n            json.put(\"phone\", phone);\r\n            json.put(\"password\",password);\r\n            json.put(\"newPassword\", newPassword);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));\r\n        //testconnect.postRequest(\"http://10.0.2.2:8000/api/user/changePassword\",requestBody);\r\n        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/changePassword\")\r\n                .addAll(String.valueOf(json))\r\n                .asString()\r\n                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                .subscribe(res -> {\r\n                    JSONObject j= new JSONObject(res);\r\n                    String message =j.getString(\"message\");\r\n                    if(message!=null&&!message.equals(\"修改成功\")){\r\n                        Log.d(\"TAG\", message);\r\n                        showSimpleWarningDialog(message);\r\n                    }else{\r\n                        showSimpleTipDialog(\"修改成功\");\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"请重试\");\r\n                });\r\n    }\r\n\r\n    //@interface 修改个人信息\r\n    public static void changeInfo(String user_id,String phone,String name){\r\n        JSONObject json = new JSONObject();\r\n        try {\r\n            json.put(\"user_id\",user_id);\r\n            json.put(\"phone\", phone);\r\n            json.put(\"name\", name);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));\r\n        //testconnect.postRequest(\"http://10.0.2.2:8000/api/user/changeInfo\",requestBody);\r\n        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/changeInfo\")\r\n                .addAll(String.valueOf(json))\r\n                .asString()\r\n                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                .subscribe(res -> {\r\n                    JSONObject j= new JSONObject(res);\r\n                    String message =j.getString(\"message\");\r\n                    if(message!=null&&!message.equals(\"修改成功\")){\r\n                        Log.d(\"TAG\", message);\r\n                        showSimpleWarningDialog(message);\r\n                    }else{\r\n                        showSimpleTipDialog(\"修改成功\");\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"网络不良,请重试\");\r\n                });\r\n    }\r\n\r\n    //@interface 添加新任务\r\n    public static void addtask(String task_name,String expected_time,String expected_exam_time,\r\n                                 String group_leader,String comments){\r\n        JSONObject json = new JSONObject();\r\n        try {\r\n            json.put(\"task_name\",task_name);\r\n            json.put(\"expected_time\", expected_time);\r\n            json.put(\"expected_exam_time\", expected_exam_time);\r\n            json.put(\"group_leader\", group_leader);\r\n            json.put(\"comments\", comments);\r\n        } catch (JSONException e) {\r\n            e.printStackTrace();\r\n        }\r\n        //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));\r\n        //testconnect.postRequest(\"http://10.0.2.2:8000/api/task/addtask\",requestBody);\r\n        RxHttp.postJson(\"http://10.0.2.2:8000/api/task/addtask\")\r\n                .addAll(String.valueOf(json))\r\n                .asString()\r\n                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                .subscribe(res -> {\r\n                    JSONObject j= new JSONObject(res);\r\n                    String message =j.getString(\"message\");\r\n                    if(message!=null){\r\n                        Log.d(\"TAG\", message);\r\n                        showSimpleWarningDialog(message);\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"网络不良,请重试\");\r\n                });\r\n\r\n    }\r\n\r\n    //@interface 质检员或小组长获取对应的任务\r\n    public static void getTasks(String user_id){\r\n        testconnect.getRequest(\"http://10.0.2.2:8000/api/task\"+user_id+\"/getTasks\");\r\n    }\r\n\r\n    //@interface 获取全部接口\r\n    public static void getAllTasks() {\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                .asString()\r\n                .subscribe(s -> {\r\n                    JSONObject j= new JSONObject(s);\r\n                    String content =j.getString(\"content\");\r\n                    Log.d(\"TAG\", content);\r\n                }, throwable -> {\r\n            //失败回调\r\n                });\r\n        //return testconnect.getRequest(\"http://10.0.2.2:8000/api/user/getAllTasks\");\r\n    }\r\n\r\n    //@interface 筛选出对应状态的任务\r\n    public static String getTasksByStatus(String status){\r\n        return testconnect.getRequest(\"http://10.0.2.2:8000/api/task\"+status+\"/getTasksByStatus\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/requests/requests.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/requests/requests.java	(date 1614153927377)
@@ -45,7 +45,7 @@
         } catch (JSONException e) {
             e.printStackTrace();
         }
-        RxHttp.postJson("http://10.0.2.2:8000/api/user/register")
+        RxHttp.postJson("http://192.168.1.106:8000/api/user/register")
                 .addAll(String.valueOf(json))
                 .asString()
                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
@@ -71,7 +71,7 @@
         } catch (JSONException e) {
             e.printStackTrace();
         }
-        RxHttp.postJson("http://10.0.2.2:8000/api/user/login")
+        RxHttp.postJson("http://192.168.1.106:8000/api/user/login")
                 .addAll(String.valueOf(json))
                 .asString()
                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
@@ -98,8 +98,8 @@
             e.printStackTrace();
         }
         //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));
-        //return testconnect.postRequest("http://10.0.2.2:8000/api/user/changePos",requestBody);
-        RxHttp.postJson("http://10.0.2.2:8000/api/user/changePos")
+        //return testconnect.postRequest("http://192.168.1.106:8000/api/user/changePos",requestBody);
+        RxHttp.postJson("http://192.168.1.106:8000/api/user/changePos")
                 .addAll(String.valueOf(json))
                 .asString()
                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
@@ -117,8 +117,8 @@
 
     //@interface 根据类别筛选用户
     public static void filterPosition(String position){
-        //testconnect.getRequest("http://10.0.2.2:8000/api/user"+position+"/filterPosition");
-        RxHttp.get("http://10.0.2.2:8000/api/user"+position+"/filterPosition")
+        //testconnect.getRequest("http://192.168.1.106:8000/api/user"+position+"/filterPosition");
+        RxHttp.get("http://192.168.1.106:8000/api/user"+position+"/filterPosition")
                 .asList(String.class)
                 .subscribe(res->{
                     if(res.size()!=0){
@@ -142,8 +142,8 @@
             e.printStackTrace();
         }
         //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));
-        //testconnect.postRequest("http://10.0.2.2:8000/api/user/changePassword",requestBody);
-        RxHttp.postJson("http://10.0.2.2:8000/api/user/changePassword")
+        //testconnect.postRequest("http://192.168.1.106:8000/api/user/changePassword",requestBody);
+        RxHttp.postJson("http://192.168.1.106:8000/api/user/changePassword")
                 .addAll(String.valueOf(json))
                 .asString()
                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
@@ -172,8 +172,8 @@
             e.printStackTrace();
         }
         //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));
-        //testconnect.postRequest("http://10.0.2.2:8000/api/user/changeInfo",requestBody);
-        RxHttp.postJson("http://10.0.2.2:8000/api/user/changeInfo")
+        //testconnect.postRequest("http://192.168.1.106:8000/api/user/changeInfo",requestBody);
+        RxHttp.postJson("http://192.168.1.106:8000/api/user/changeInfo")
                 .addAll(String.valueOf(json))
                 .asString()
                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
@@ -205,8 +205,8 @@
             e.printStackTrace();
         }
         //RequestBody requestBody =RequestBody.create(JSON, String.valueOf(json));
-        //testconnect.postRequest("http://10.0.2.2:8000/api/task/addtask",requestBody);
-        RxHttp.postJson("http://10.0.2.2:8000/api/task/addtask")
+        //testconnect.postRequest("http://192.168.1.106:8000/api/task/addtask",requestBody);
+        RxHttp.postJson("http://192.168.1.106:8000/api/task/addtask")
                 .addAll(String.valueOf(json))
                 .asString()
                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
@@ -225,12 +225,12 @@
 
     //@interface 质检员或小组长获取对应的任务
     public static void getTasks(String user_id){
-        testconnect.getRequest("http://10.0.2.2:8000/api/task"+user_id+"/getTasks");
+        testconnect.getRequest("http://192.168.1.106:8000/api/task"+user_id+"/getTasks");
     }
 
     //@interface 获取全部接口
     public static void getAllTasks() {
-        RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+        RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                 .asString()
                 .subscribe(s -> {
                     JSONObject j= new JSONObject(s);
@@ -239,11 +239,11 @@
                 }, throwable -> {
             //失败回调
                 });
-        //return testconnect.getRequest("http://10.0.2.2:8000/api/user/getAllTasks");
+        //return testconnect.getRequest("http://192.168.1.106:8000/api/user/getAllTasks");
     }
 
     //@interface 筛选出对应状态的任务
     public static String getTasksByStatus(String status){
-        return testconnect.getRequest("http://10.0.2.2:8000/api/task"+status+"/getTasksByStatus");
+        return testconnect.getRequest("http://192.168.1.106:8000/api/task"+status+"/getTasksByStatus");
     }
 }
Index: app/src/main/java/com/example/my/activity/VerifyActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.adapter.UserAdapter;\r\nimport com.example.my.listview.User;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\nimport java.util.ArrayList;\r\nimport com.example.my.utils.roleConvert;\r\n\r\npublic class VerifyActivity extends AppCompatActivity{\r\n    private ArrayAdapter<User> userAdapters;\r\n    private ArrayList<User> users;\r\n    private ArrayList<Integer> usersId;\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_verify);\r\n        users=new ArrayList<User>();\r\n        RxHttp.get(\"http://10.0.2.2:8000/api/user/Visitor/filterPosition\")\r\n                .asList(String.class)\r\n                .subscribe(res->{\r\n                    if(res.size()!=0){\r\n                        for (String leaderI : res) {\r\n                            JSONObject j = new JSONObject(leaderI);\r\n                            String name=j.getString(\"name\").split(\"-\")[0];\r\n                            String role=j.getString(\"name\").split(\"-\")[1];\r\n                            users.add(new User(name,roleConvert.roleEngToCN(role),j.getString(\"phone\")));\r\n                        }\r\n                    }\r\n                },throwable -> {\r\n\r\n                });\r\n\r\n        userAdapters=new UserAdapter(this,R.layout.verify_item,users);\r\n        ListView list=findViewById(R.id.list);\r\n        list.setAdapter(userAdapters);\r\n        list.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\r\n                User u=userAdapters.getItem(position);\r\n                jumpToDetail(u);\r\n            }\r\n        });\r\n    }\r\n    private void jumpToDetail(User u){\r\n        Intent i=new Intent(VerifyActivity.this, VerifyDetailActivity.class);\r\n        i.putExtra(\"user\",u);\r\n        startActivity(i);\r\n    };\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/VerifyActivity.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/VerifyActivity.java	(date 1614153927382)
@@ -26,7 +26,7 @@
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_verify);
         users=new ArrayList<User>();
-        RxHttp.get("http://10.0.2.2:8000/api/user/Visitor/filterPosition")
+        RxHttp.get("http://192.168.1.106:8000/api/user/Visitor/filterPosition")
                 .asList(String.class)
                 .subscribe(res->{
                     if(res.size()!=0){
Index: app/src/main/java/com/example/my/activity/RegisterActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;\r\nimport com.xuexiang.xui.widget.spinner.materialspinner.MaterialSpinner;\r\nimport com.xuexiang.xui.widget.textview.supertextview.SuperButton;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\nimport java.util.concurrent.atomic.AtomicInteger;\r\n\r\npublic class RegisterActivity extends AppCompatActivity {\r\n    private String name;\r\n    private String phone;\r\n    private String pwd;\r\n    private String ValidPwd;\r\n    private SuperButton submit;\r\n    private MaterialSpinner mMaterialSpinner;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstance) {\r\n        super.onCreate(savedInstance);\r\n        setContentView(R.layout.activity_register);\r\n        MaterialEditText phoneText=findViewById(R.id.et_phone_number);\r\n        MaterialEditText nameText=findViewById(R.id.et_user_id);\r\n        MaterialEditText pwdText=findViewById(R.id.et_new_code);\r\n        MaterialEditText ValidPwdText=findViewById(R.id.et_confirm_code);\r\n        mMaterialSpinner=findViewById(R.id.spinner);\r\n        submit=findViewById(R.id.btn_register);\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                phone=phoneText.getText().toString();\r\n                name=nameText.getText().toString();\r\n                pwd=pwdText.getText().toString();\r\n                ValidPwd=ValidPwdText.getText().toString();\r\n                int role=mMaterialSpinner.getSelectedIndex();\r\n                //获取用户角色。0：系统管理员 1：生产部经理 2：组长 3：质检部经理 4：质检员 5：行政综合部\r\n                switch (role) {\r\n                    case 0:\r\n                        name+=\"-Admin\";\r\n                        break;\r\n                    case 1:\r\n                        name+=\"-Produce_manager\";\r\n                        break;\r\n                    case 2:\r\n                        name+=\"-GroupLeader\";\r\n                        break;\r\n                    case 3:\r\n                        name+=\"-Quality_manager\";\r\n                        break;\r\n                    case 4:\r\n                        name+=\"-Quality_inspector\";\r\n                        break;\r\n                    case 5:\r\n                        name+=\"-Comprehensive_depart\";\r\n                        break;\r\n                }\r\n                if(!pwd.equals(ValidPwd)){\r\n                    showSimpleWarningDialog(\"两次密码不一致\");\r\n                }\r\n                else{\r\n                    JSONObject json = new JSONObject();\r\n                    try {\r\n                        json.put(\"name\", name);\r\n                        json.put(\"phone\", phone);\r\n                        json.put(\"password\", pwd);\r\n                        Log.d(phone, \"? \");\r\n                    } catch (JSONException e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    RxHttp.postJson(\"http://10.0.2.2:8000/api/user/register\")\r\n                            .addAll(String.valueOf(json))\r\n                            .asString()\r\n                            .observeOn(AndroidSchedulers.mainThread())\r\n                            .subscribe(res -> {\r\n                                JSONObject j= new JSONObject(res);\r\n                                String message =j.getString(\"message\");\r\n                                if(!message.equals(\"null\")){\r\n                                    Log.d(\"TAG\", message);\r\n                                    showSimpleWarningDialog(message);\r\n                                }else{\r\n                                    showSimpleTipDialog(\"请等待管理员审核\");\r\n\r\n                                }\r\n                            }, throwable -> {\r\n                                //失败回调\r\n                                showSimpleWarningDialog(\"注册失败，请重试\");\r\n                            });\r\n                }\r\n            }\r\n        });\r\n    }\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/RegisterActivity.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/RegisterActivity.java	(date 1614153927386)
@@ -82,7 +82,7 @@
                     } catch (JSONException e) {
                         e.printStackTrace();
                     }
-                    RxHttp.postJson("http://10.0.2.2:8000/api/user/register")
+                    RxHttp.postJson("http://192.168.1.106:8000/api/user/register")
                             .addAll(String.valueOf(json))
                             .asString()
                             .observeOn(AndroidSchedulers.mainThread())
Index: app/src/main/java/com/example/my/activity/testconnect.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.util.Log;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.RequestBody;\r\nimport okhttp3.Response;\r\n\r\nimport java.io.IOException;\r\n\r\n\r\npublic class testconnect {\r\n\r\n\r\n    public static String getRequest(String url) {\r\n        //url =\"http://10.0.2.2:8000/api/user/hello\"\r\n        String finalUrl = url;\r\n\r\n\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                OkHttpClient client = new OkHttpClient();\r\n                Request request = new Request.Builder().url(finalUrl).build();\r\n                try {\r\n                    Response response = client.newCall(request).execute();//发送请求\r\n                    String result = response.body().string();\r\n                    Log.d(\"123OKhttp\", \"result: \" + result);\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }).start();\r\n        return finalUrl;\r\n    }\r\n\r\n\r\n    public static String postRequest(String url, RequestBody requestBody) {\r\n        //RequestBody构造格式:RequestBody requestBody = new FormBody.Builder().add(\"param1\", \"value1\").add(\"param2\", \"value2\").build();\r\n        //url =\"http://10.0.2.2:8000/api/user/hello\"\r\n        String finalUrl = url;\r\n\r\n        new Thread(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                OkHttpClient client = new OkHttpClient();\r\n                Request request = new Request.Builder().url(finalUrl).post(requestBody).addHeader(\"contentType\",\"application/json;charset=UTF-8\").build();\r\n                try {\r\n                    Response response = client.newCall(request).execute();//发送请求\r\n                    String result = response.body().string();\r\n                    Log.d(\"123OKhttp\", \"result: \" + result);\r\n\r\n                } catch (IOException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }).start();\r\n        return finalUrl;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/testconnect.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/testconnect.java	(date 1614153927394)
@@ -13,7 +13,7 @@
 
 
     public static String getRequest(String url) {
-        //url ="http://10.0.2.2:8000/api/user/hello"
+        //url ="http://192.168.1.106:8000/api/user/hello"
         String finalUrl = url;
 
 
@@ -37,7 +37,7 @@
 
     public static String postRequest(String url, RequestBody requestBody) {
         //RequestBody构造格式:RequestBody requestBody = new FormBody.Builder().add("param1", "value1").add("param2", "value2").build();
-        //url ="http://10.0.2.2:8000/api/user/hello"
+        //url ="http://192.168.1.106:8000/api/user/hello"
         String finalUrl = url;
 
         new Thread(new Runnable() {
Index: app/src/main/java/com/example/my/activity/AddTaskActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.utils.XToastUtils;\r\nimport com.xuexiang.xui.widget.button.ButtonView;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.picker.widget.OptionsPickerView;\r\nimport com.xuexiang.xui.widget.picker.widget.TimePickerView;\r\nimport com.xuexiang.xui.widget.picker.widget.builder.OptionsPickerBuilder;\r\nimport com.xuexiang.xui.widget.picker.widget.builder.TimePickerBuilder;\r\nimport com.xuexiang.xui.widget.picker.widget.configure.TimePickerType;\r\nimport com.xuexiang.xui.widget.picker.widget.listener.OnTimeSelectListener;\r\nimport com.xuexiang.xutil.data.DateUtils;\r\n\r\nimport java.io.IOException;\r\nimport java.text.DateFormat;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Calendar;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport okhttp3.Cache;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport okhttp3.internal.http.RealResponseBody;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\nimport static com.xuexiang.xui.XUI.getContext;\r\n\r\npublic class AddTaskActivity extends AppCompatActivity {\r\n    EditText taskName;\r\n    ButtonView teamLeader;\r\n    ButtonView ddl1;\r\n    ButtonView ddl2;\r\n    TextView note;\r\n    Button submit;\r\n    private int leaderSelectOption = 0;\r\n    private TimePickerView ddl1TimePickerDialog;\r\n    private TimePickerView ddl2TimePickerDialog;\r\n    private List<String> teamLeaderOption=new ArrayList<>();\r\n    private List<Integer> teamLeaderId =new ArrayList<>();\r\n    @Override\r\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_add_task);\r\n        taskName=findViewById(R.id.taskName);\r\n        teamLeader=findViewById(R.id.select_teamleader);\r\n        ddl1=findViewById(R.id.select_ddl1);\r\n        ddl2=findViewById(R.id.select_ddl2);\r\n        note=findViewById(R.id.edit_note);\r\n        submit=findViewById(R.id.submit);\r\n        teamLeader.setText(\"单击选择组长\");\r\n        ddl1.setText(\"2020-02-28 12:00:00\");\r\n        ddl2.setText(\"2020-02-29 12:00:00\");\r\n\r\n        ddl1.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (ddl1TimePickerDialog == null) {\r\n                    Calendar calendar = Calendar.getInstance();\r\n                    calendar.setTime(DateUtils.getNowDate());\r\n                    ddl1TimePickerDialog = new TimePickerBuilder(AddTaskActivity.this, new OnTimeSelectListener() {\r\n                        @Override\r\n                        public void onTimeSelected(Date date, View v) {\r\n                            XToastUtils.toast(DateUtils.date2String(date, DateUtils.yyyyMMddHHmmss.get()));\r\n                            ddl1.setText(DateUtils.date2String(date,DateUtils.yyyyMMddHHmmss.get()));\r\n                        }\r\n                    })\r\n                            .setTimeSelectChangeListener(date -> Log.i(\"pvTime\", \"onTimeSelectChanged\"))\r\n                            .setType(TimePickerType.ALL)\r\n                            .setTitleText(\"时间选择\")\r\n                            .isDialog(true)\r\n                            .setOutSideCancelable(false)\r\n                            .setDate(calendar)\r\n                            .build();\r\n                }\r\n                ddl1TimePickerDialog.show();\r\n            }\r\n        });\r\n        ddl2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                if (ddl2TimePickerDialog == null) {\r\n                    Calendar calendar = Calendar.getInstance();\r\n                    calendar.setTime(DateUtils.getNowDate());\r\n                    ddl2TimePickerDialog = new TimePickerBuilder(AddTaskActivity.this, new OnTimeSelectListener() {\r\n                        @Override\r\n                        public void onTimeSelected(Date date, View v) {\r\n                            XToastUtils.toast(DateUtils.date2String(date, DateUtils.yyyyMMddHHmmss.get()));\r\n                            ddl2.setText(DateUtils.date2String(date,DateUtils.yyyyMMddHHmmss.get()));\r\n                        }\r\n                    })\r\n                            .setTimeSelectChangeListener(date -> Log.i(\"pvTime\", \"onTimeSelectChanged\"))\r\n                            .setType(TimePickerType.ALL)\r\n                            .setTitleText(\"时间选择\")\r\n                            .isDialog(true)\r\n                            .setOutSideCancelable(false)\r\n                            .setDate(calendar)\r\n                            .build();\r\n                }\r\n                ddl2TimePickerDialog.show();\r\n            }\r\n        });\r\n\r\n\r\n        teamLeader.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View view) {\r\n                RxHttp.get(\"http://10.0.2.2:8000/api/user/GroupLeader/filterPosition\")\r\n                        .asList(String.class)\r\n                        .observeOn(AndroidSchedulers.mainThread())\r\n                        .subscribe(res->{\r\n                            if(res.size()!=0){\r\n\r\n                                Log.d(\"TAG\", res.toString());\r\n                                //后续处理\r\n                                for (int i=0;i<res.size();i++){\r\n                                    String leaderI=res.get(i);\r\n                                    JSONObject j= new JSONObject(leaderI);\r\n                                    teamLeaderOption.add(j.getString(\"name\"));\r\n                                    teamLeaderId.add(j.getInt(\"user_id\"));\r\n                                }\r\n\r\n                                OptionsPickerView pvOptions = new OptionsPickerBuilder(AddTaskActivity.this, (v, options1, options2, options3) -> {\r\n                                    teamLeader.setText(teamLeaderOption.get(options1));\r\n                                    leaderSelectOption = options1;\r\n                                    return false;\r\n                                })\r\n                                        .setTitleText(\"选择组长\")\r\n                                        .setSelectOptions(leaderSelectOption)\r\n                                        .build();\r\n                                pvOptions.setPicker(teamLeaderOption);\r\n                                pvOptions.show();\r\n                            }else{\r\n                                showSimpleWarningDialog(\"未查询到组长\");\r\n                            }\r\n                        },throwable -> {\r\n                            showSimpleWarningDialog(\"网络错误,请重试\");\r\n                        });\r\n            }\r\n        });\r\n        submit.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                String name=taskName.getText().toString();\r\n                int leader=teamLeaderId.get(teamLeaderOption.indexOf(teamLeader.getText().toString()));\r\n                teamLeaderId.clear();\r\n                teamLeaderOption.clear();\r\n                String time1 = ddl1.getText().toString();\r\n                String time2=ddl2.getText().toString();\r\n                String notes=note.getText().toString();\r\n\r\n                RxHttp.postJson(\"http://10.0.2.2:8000/api/task/addtask\")\r\n                        .add(\"task_name\",name).add(\"expected_time\",time1).add(\"expected_exam_time\",time2)\r\n                        .add(\"group_leader\",leader).add(\"comments\",notes)\r\n                        .asString()\r\n                        .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                        .subscribe(res -> {\r\n                            JSONObject j= new JSONObject(res);\r\n                            String message =j.getString(\"message\");\r\n                            if(!message.equals(\"null\")){\r\n                                Log.d(\"TAG\", message);\r\n                                showSimpleWarningDialog(message);\r\n                            }\r\n                            else{\r\n                                showSimpleTipDialog(\"添加成功\");\r\n                            }\r\n                        }, throwable -> {\r\n                            showSimpleWarningDialog(\"网络不良,请重试\");\r\n                        });\r\n\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/AddTaskActivity.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/AddTaskActivity.java	(date 1614153927401)
@@ -124,7 +124,7 @@
         teamLeader.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View view) {
-                RxHttp.get("http://10.0.2.2:8000/api/user/GroupLeader/filterPosition")
+                RxHttp.get("http://192.168.1.106:8000/api/user/GroupLeader/filterPosition")
                         .asList(String.class)
                         .observeOn(AndroidSchedulers.mainThread())
                         .subscribe(res->{
@@ -168,7 +168,7 @@
                 String time2=ddl2.getText().toString();
                 String notes=note.getText().toString();
 
-                RxHttp.postJson("http://10.0.2.2:8000/api/task/addtask")
+                RxHttp.postJson("http://192.168.1.106:8000/api/task/addtask")
                         .add("task_name",name).add("expected_time",time1).add("expected_exam_time",time2)
                         .add("group_leader",leader).add("comments",notes)
                         .asString()
Index: app/src/main/java/com/example/my/activity/NoteActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.content.Context;\r\nimport android.os.Bundle;\r\nimport android.text.TextUtils;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.view.inputmethod.InputMethodManager;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.fragment.CheckManagerDetailFragment_1;\r\nimport com.example.my.fragment.CheckManagerDetailFragment_2;\r\nimport com.example.my.fragment.CheckmanDetailFragment;\r\nimport com.example.my.fragment.ExecutorDetailFragment;\r\nimport com.example.my.fragment.ManagerDetailFragment;\r\nimport com.example.my.fragment.TeamLeaderDetailFragment;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class NoteActivity extends AppCompatActivity {\r\n\r\n    private EditText editText;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_note);\r\n        setTitle(\"修改备注\");\r\n\r\n        editText = findViewById(R.id.edit_text);\r\n        String current=getIntent().getStringExtra(\"note\");\r\n        String id=getIntent().getStringExtra(\"id\");\r\n        editText.setFocusable(true);\r\n        editText.requestFocus();\r\n        editText.setText(current);\r\n        InputMethodManager inputManager = (InputMethodManager)\r\n                getSystemService(Context.INPUT_METHOD_SERVICE);\r\n        if (inputManager != null) {\r\n            inputManager.showSoftInput(editText, 0);\r\n        }\r\n\r\n        Button addBtn = findViewById(R.id.add_note);\r\n\r\n        addBtn.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                CharSequence content = editText.getText();\r\n                if (TextUtils.isEmpty(content)) {\r\n                    Toast.makeText(NoteActivity.this,\r\n                            \"No content to add\", Toast.LENGTH_SHORT).show();\r\n                    return;\r\n                }\r\n                try {\r\n                    saveNote2Database(content.toString().trim(),id);\r\n                }catch (Exception e){\r\n                    Log.d(\"TAG\", e.toString());\r\n                }\r\n\r\n//                if (succeed) {\r\n//                    Toast.makeText(NoteActivity.this,\r\n//                            \"Note added\", Toast.LENGTH_SHORT).show();\r\n//                    setResult(Activity.RESULT_OK);\r\n//                } else {\r\n//                    Toast.makeText(NoteActivity.this,\r\n//                            \"Error\", Toast.LENGTH_SHORT).show();\r\n//                }\r\n\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onDestroy() {\r\n        super.onDestroy();\r\n    }\r\n\r\n    private void saveNote2Database(String content,String id) {\r\n\r\n        RxHttp.postJson(\"http://10.0.2.2:8000/api/task/modifytask\")\r\n                .add(\"task_id\",id).add(\"comments\",content)\r\n                .asString()\r\n                .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调\r\n                .subscribe(res -> {\r\n                    JSONObject j= new JSONObject(res);\r\n                    String message =j.getString(\"message\");\r\n                    if(!message.equals(\"null\")){\r\n                        Log.d(\"TAG\", message);\r\n                        showSimpleWarningDialog(message);\r\n                    }else{\r\n                        //global.addNote=editText.getText().toString();\r\n                        showSimpleTipDialog(\"修改成功\");\r\n\r\n                    }\r\n                }, throwable -> {\r\n                    showSimpleWarningDialog(\"网络不良,请重试\");\r\n                });\r\n    }\r\n\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                        String setText=\"备注：\"+editText.getText();\r\n                        ManagerDetailFragment.note.setText(setText);\r\n                        CheckManagerDetailFragment_1.note.setText(setText);\r\n                        CheckManagerDetailFragment_2.note.setText(setText);\r\n                        CheckmanDetailFragment.note.setText(setText);\r\n                        ExecutorDetailFragment.note.setText(setText);\r\n                        TeamLeaderDetailFragment.note.setText(setText);\r\n                        finish();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/NoteActivity.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/NoteActivity.java	(date 1614153927409)
@@ -85,7 +85,7 @@
 
     private void saveNote2Database(String content,String id) {
 
-        RxHttp.postJson("http://10.0.2.2:8000/api/task/modifytask")
+        RxHttp.postJson("http://192.168.1.106:8000/api/task/modifytask")
                 .add("task_id",id).add("comments",content)
                 .asString()
                 .observeOn(AndroidSchedulers.mainThread()) //指定在主线程回调
Index: app/src/main/java/com/example/my/activity/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.Manifest;\r\nimport android.content.Intent;\r\nimport android.content.pm.PackageManager;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.MenuItem;\r\nimport android.view.View;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.widget.Toolbar;\r\nimport androidx.core.app.ActivityCompat;\r\nimport androidx.core.content.ContextCompat;\r\nimport com.example.my.fragment.CheckManagerFragment;\r\nimport com.example.my.fragment.CheckManagerFragment_1;\r\nimport com.example.my.fragment.CheckmanFragment;\r\nimport com.example.my.fragment.ExecutorFragment;\r\nimport com.example.my.fragment.ManagerFragment;\r\nimport com.example.my.fragment.ProductorFragment;\r\nimport com.example.my.fragment.TeamLeaderFragment;\r\nimport com.example.my.listview.Task;\r\nimport com.example.my.utils.XToastUtils;\r\nimport com.google.android.material.tabs.TabLayout;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.fragment.app.FragmentPagerAdapter;\r\nimport androidx.viewpager.widget.ViewPager;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.chapter3.demo.R;\r\n\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity implements ManagerFragment.OnItemSelectedListener,ProductorFragment.OnItemSelectedListener,TeamLeaderFragment.OnItemSelectedListener,CheckmanFragment.OnItemSelectedListener,ExecutorFragment.OnItemSelectedListener, CheckManagerFragment_1.OnItemSelectedListener {\r\n    private static final int PAGE_COUNT = 2;\r\n    private int role;\r\n    private String id;\r\n\r\n    private void checkNeedPermissions(){\r\n        if (ContextCompat.checkSelfPermission(this, Manifest.permission.WRITE_EXTERNAL_STORAGE)\r\n                != PackageManager.PERMISSION_GRANTED\r\n                || ContextCompat.checkSelfPermission(this, Manifest.permission.READ_EXTERNAL_STORAGE)\r\n                != PackageManager.PERMISSION_GRANTED) {\r\n            //多个权限一起申请\r\n            ActivityCompat.requestPermissions(this, new String[]{\r\n                    Manifest.permission.WRITE_EXTERNAL_STORAGE,\r\n                    Manifest.permission.READ_EXTERNAL_STORAGE\r\n            }, 1);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstance) {\r\n        super.onCreate(savedInstance);\r\n        //checkNeedPermissions();\r\n        //获取用户角色。0：系统管理员 1：生产部经理 2：组长 3：质检部经理 4：质检员 5：行政综合部\r\n        role=getIntent().getIntExtra(\"role\",4);\r\n        //获取用户Id\r\n        id=getIntent().getStringExtra(\"id\");\r\n        setContentView(R.layout.manager);\r\n        ViewPager pager=findViewById(R.id.view_pager);\r\n        Toolbar toolbar=findViewById(R.id.tool_bar);\r\n        toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                jump();\r\n            }\r\n        });\r\n        pager.setAdapter(new FragmentPagerAdapter(getSupportFragmentManager()) {\r\n            @NotNull\r\n            @Override\r\n            public Fragment getItem(int i) {\r\n                ArrayList<Task> tasks = Task.getItems();\r\n                tasks.clear();\r\n\r\n                RxHttp.get(\"http://10.0.2.2:8000/api/task/getAllTasks\")\r\n                        .asList(String.class)\r\n                        .observeOn(AndroidSchedulers.mainThread())\r\n                        .subscribe(s -> {\r\n                            Log.d(\"TAG\", s.get(0).toString());\r\n                            for (String value : s) {\r\n                                JSONObject js = new JSONObject(value);\r\n                                Task t = new Task(js.getString(\"task_id\"), js.getString(\"task_name\"), js.getString(\"group_leader\"),\r\n                                        js.getString(\"quality_inspector\"), js.getString(\"expected_time\"),\r\n                                        js.getString(\"expected_exam_time\"), js.getString(\"create_time\"), js.getString(\"status\"),\r\n                                        js.getString(\"comments\"), js.getString(\"finish_time\"), js.getString(\"finish_exam_time\"));\r\n                                tasks.add(t);\r\n                            }\r\n                        }, throwable -> {\r\n                            showSimpleWarningDialog(\"获取任务列表失败\");\r\n                        });\r\n\r\n\r\n                switch (role) {\r\n                    case 0:\r\n                        return ManagerFragment.newInstance(tasks);\r\n                    case 1:\r\n                        return ProductorFragment.newInstance(tasks);\r\n                    case 2:\r\n                        return TeamLeaderFragment.newInstance(tasks, id);\r\n                    case 3:\r\n                        return CheckManagerFragment.newInstance(id, tasks);\r\n                    case 4:\r\n                        return CheckmanFragment.newInstance(id, tasks);\r\n                    case 5:\r\n                        return ExecutorFragment.newInstance(tasks);\r\n                }\r\n\r\n                    return new Fragment();\r\n                }\r\n\r\n            @Override\r\n            public int getCount() {\r\n                return PAGE_COUNT;\r\n            }\r\n\r\n        });\r\n\r\n    }\r\n\r\n    @Override\r\n    public void onItemSelected(Task task) {\r\n\r\n        if(role==0||role==1){\r\n            Intent i = new Intent(this, ManagerDetailActivity.class);\r\n            i.putExtra(\"task\", task);\r\n            startActivity(i);\r\n        }\r\n        else if(role==2){\r\n            Intent i = new Intent(this, TeamLeaderDetailActivity.class);\r\n            i.putExtra(\"task\", task);\r\n            startActivity(i);\r\n        }\r\n        else if(role==3){\r\n            if(task.getStatus().equals(\"待质检\")){\r\n                Intent i = new Intent(this, CheckManagerDetail1Activity.class);\r\n                i.putExtra(\"task\", task);\r\n                startActivity(i);\r\n            }\r\n            else if(task.getQuality_inspector().equals(id)){\r\n                Intent i = new Intent(this, CheckmanDetailActivity.class);\r\n                i.putExtra(\"task\", task);\r\n                startActivity(i);\r\n            }\r\n            else{\r\n                Intent i = new Intent(this, CheckManagerDetail2Activity.class);\r\n                i.putExtra(\"task\", task);\r\n                i.putExtra(\"id\",id);\r\n                startActivity(i);\r\n            }\r\n        }\r\n        else if(role==4){\r\n            Intent i = new Intent(this, CheckmanDetailActivity.class);\r\n            i.putExtra(\"task\", task);\r\n            startActivity(i);\r\n        }\r\n        else if(role==5){\r\n            Intent i = new Intent(this, ExecutorDetailActivity.class);\r\n            i.putExtra(\"task\", task);\r\n            startActivity(i);\r\n        }\r\n    }\r\n\r\n    private void jump(){\r\n        Intent i=new Intent(this,SettingAcitivity.class);\r\n        startActivity(i);\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    private void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/MainActivity.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/MainActivity.java	(date 1614153927414)
@@ -88,7 +88,7 @@
                 ArrayList<Task> tasks = Task.getItems();
                 tasks.clear();
 
-                RxHttp.get("http://10.0.2.2:8000/api/task/getAllTasks")
+                RxHttp.get("http://192.168.1.106:8000/api/task/getAllTasks")
                         .asList(String.class)
                         .observeOn(AndroidSchedulers.mainThread())
                         .subscribe(s -> {
Index: app/src/main/java/com/example/my/activity/SettingAcitivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.preference.EditTextPreference;\r\nimport android.preference.Preference;\r\nimport android.preference.PreferenceActivity;\r\nimport android.util.Log;\r\nimport android.widget.LinearLayout;\r\nimport androidx.annotation.NonNull;\r\nimport com.example.chapter3.demo.R;\r\nimport com.example.my.utils.XToastUtils;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\n\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\n\r\npublic class SettingAcitivity extends PreferenceActivity {\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        addPreferencesFromResource(R.xml.preference_setting);\r\n        SharedPreferences sharedPre=getSharedPreferences(\"config\",MODE_PRIVATE);\r\n\r\n        Preference name_pref=findPreference(\"example_text\");\r\n        name_pref.setSummary(sharedPre.getString(\"name\",\"\"));\r\n        name_pref.setOnPreferenceClickListener(preference -> {\r\n            showNameDialog();\r\n            return false;\r\n        });\r\n\r\n\r\n        Preference pref = findPreference(\"modify_password\");\r\n        pref.setOnPreferenceClickListener(preference -> {\r\n            showCustomDialog();\r\n            return false;\r\n        });\r\n    }\r\n    private void showNameDialog() {\r\n        new MaterialDialog.Builder(this)\r\n                .customView(R.layout.dialog_name, true)\r\n                .title(\"修改名称\")\r\n                .positiveText(\"确定\")\r\n                .negativeText(\"取消\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        SharedPreferences sharedPre=getSharedPreferences(\"config\",MODE_PRIVATE);\r\n                        MaterialEditText newNameText=dialog.getCustomView().findViewById(R.id.et_new_name);\r\n                        String newName=newNameText.getText().toString();\r\n\r\n                        int user_id = sharedPre.getInt(\"user_id\",-1);\r\n                        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/changeInfo\")\r\n                                .add(\"user_id\",user_id)\r\n                                .add(\"name\",newName)\r\n                                .asString()\r\n                                .observeOn(AndroidSchedulers.mainThread())\r\n                                .subscribe(res -> {\r\n                                    JSONObject j= new JSONObject(res);\r\n                                    String message =j.getString(\"message\");\r\n                                    if(!message.equals(\"null\") &&!message.equals(\"修改成功\")){\r\n                                        Log.d(\"TAG\", message);\r\n                                        showSimpleWarningDialog(message);\r\n                                    }else{\r\n                                        showSimpleTipDialog(\"修改成功\");\r\n                                        SharedPreferences.Editor edit = sharedPre.edit();\r\n                                        edit.putString(\"name\",newName);\r\n                                        edit.commit();\r\n                                    }\r\n                                }, throwable -> {\r\n                                    showSimpleWarningDialog(\"请重试\");\r\n                                });\r\n                    }\r\n        }).show();\r\n    }\r\n    private void showCustomDialog() {\r\n        new MaterialDialog.Builder(this)\r\n                .customView(R.layout.dialog_custom, true)\r\n                .title(\"修改密码\")\r\n                .positiveText(\"确定\")\r\n                .negativeText(\"取消\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        SharedPreferences sharedPre=getSharedPreferences(\"config\",MODE_PRIVATE);\r\n\r\n                        MaterialEditText oldPwdText=dialog.getCustomView().findViewById(R.id.et_now_code);\r\n                        String nowPwd=oldPwdText.getText().toString();\r\n                        MaterialEditText pwdText=dialog.getCustomView().findViewById(R.id.et_new_code_modify);\r\n                        String pwd=pwdText.getText().toString();\r\n                        MaterialEditText confirmPwdText=dialog.getCustomView().findViewById(R.id.et_confirm_code_modify);\r\n                        String confirmPwd=confirmPwdText.getText().toString();\r\n\r\n                        int user_id = sharedPre.getInt(\"user_id\",-1);\r\n\r\n                        if(!pwd.equals(confirmPwd)){\r\n                            showSimpleWarningDialog(\"两次密码不一致\");\r\n                        }else{\r\n                        RxHttp.postJson(\"http://10.0.2.2:8000/api/user/changePassword\")\r\n                                .add(\"user_id\",user_id)\r\n                                .add(\"password\",nowPwd)\r\n                                .add(\"newPassword\",pwd)\r\n                                .asString()\r\n                                .observeOn(AndroidSchedulers.mainThread())\r\n                                .subscribe(res -> {\r\n                                    JSONObject j= new JSONObject(res);\r\n                                    String message =j.getString(\"message\");\r\n                                    if(!message.equals(\"null\") &&!message.equals(\"修改成功\")){\r\n                                        Log.d(\"TAG\", message);\r\n                                        showSimpleWarningDialog(message);\r\n                                    }else{\r\n                                        showSimpleTipDialog(\"修改成功\");\r\n                                        SharedPreferences.Editor edit = sharedPre.edit();\r\n                                        edit.putString(\"password\",pwd);\r\n                                        edit.commit();\r\n                                    }\r\n                                }, throwable -> {\r\n                                    showSimpleWarningDialog(\"请重试\");\r\n                                });\r\n                        }\r\n                    }\r\n                })\r\n                .show();\r\n\r\n    }\r\n    public void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n    public void showSimpleTipDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_tip)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/SettingAcitivity.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/SettingAcitivity.java	(date 1614153927421)
@@ -54,7 +54,7 @@
                         String newName=newNameText.getText().toString();
 
                         int user_id = sharedPre.getInt("user_id",-1);
-                        RxHttp.postJson("http://10.0.2.2:8000/api/user/changeInfo")
+                        RxHttp.postJson("http://192.168.1.106:8000/api/user/changeInfo")
                                 .add("user_id",user_id)
                                 .add("name",newName)
                                 .asString()
@@ -100,7 +100,7 @@
                         if(!pwd.equals(confirmPwd)){
                             showSimpleWarningDialog("两次密码不一致");
                         }else{
-                        RxHttp.postJson("http://10.0.2.2:8000/api/user/changePassword")
+                        RxHttp.postJson("http://192.168.1.106:8000/api/user/changePassword")
                                 .add("user_id",user_id)
                                 .add("password",nowPwd)
                                 .add("newPassword",pwd)
Index: app/src/main/java/com/example/my/activity/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.my.activity;\r\n\r\nimport android.content.Context;\r\nimport android.content.Intent;\r\nimport android.content.SharedPreferences;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.example.chapter3.demo.R;\r\nimport com.xuexiang.xui.widget.button.ButtonView;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.DialogAction;\r\nimport com.xuexiang.xui.widget.dialog.materialdialog.MaterialDialog;\r\nimport com.xuexiang.xui.widget.edittext.materialedittext.MaterialEditText;\r\nimport com.xuexiang.xui.widget.textview.supertextview.SuperButton;\r\nimport io.reactivex.rxjava3.android.schedulers.AndroidSchedulers;\r\nimport org.json.JSONObject;\r\nimport rxhttp.RxHttp;\r\nimport com.example.my.utils.roleConvert;\r\npublic class LoginActivity extends AppCompatActivity{\r\n    @Override\r\n    protected void onCreate(Bundle savedInstance) {\r\n        super.onCreate(savedInstance);\r\n        setContentView(R.layout.activity_login);\r\n        SuperButton button=findViewById(R.id.btn_login);\r\n        button.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //模拟用户角色0：系统管理员 1：生产部经理 2：组长 3：质检部经理 4：质检员 5：行政综合部\r\n                MaterialEditText phoneText=findViewById(R.id.et_phone_number);\r\n                String phone=phoneText.getText().toString();\r\n                MaterialEditText pwdText=findViewById(R.id.et_password);\r\n                String pwd=pwdText.getText().toString();\r\n\r\n                RxHttp.postJson(\"http://10.0.2.2:8000/api/user/login\")\r\n                        .add(\"phone\",phone)\r\n                        .add(\"password\",pwd)\r\n                        .asString()\r\n                        .observeOn(AndroidSchedulers.mainThread())\r\n                        .subscribe(res -> {\r\n                            JSONObject j= new JSONObject(res);\r\n                            String message =j.getString(\"message\");\r\n\r\n                            if(!message.equals(\"null\")){\r\n                                Log.d(\"TAG\", message);\r\n                                showSimpleWarningDialog(message);\r\n                            }else{\r\n                                String content=j.getString(\"content\");\r\n                                JSONObject c= new JSONObject(content);\r\n                                String user_name=c.getString(\"name\");\r\n                                String position=c.getString(\"position\");\r\n                                int user_id=c.getInt(\"user_id\");\r\n\r\n                                SharedPreferences sharedPre=getSharedPreferences(\"config\", MODE_PRIVATE);\r\n                                //获取Editor对象\r\n                                SharedPreferences.Editor edit = sharedPre.edit();\r\n                                //设置参数\r\n                                edit.putInt(\"user_id\",user_id);\r\n                                edit.putString(\"phone\",phone);\r\n                                edit.putString(\"password\",pwd);\r\n                                edit.putString(\"name\",user_name);\r\n                                edit.putString(\"position\",position);\r\n                                //提交\r\n                                edit.commit();\r\n                                login(roleConvert.roleStrToNum(position),user_id+\"\");\r\n                            }\r\n                        }, throwable -> {\r\n                            //失败回调\r\n                            showSimpleWarningDialog(\"登录失败，请重试\");\r\n                        });\r\n\r\n            }\r\n        });\r\n        ButtonView button2=findViewById(R.id.btn_register);\r\n        button2.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                //跳转到注册界面\r\n                register();\r\n            }\r\n        });\r\n    }\r\n    private void login(int role,String id){\r\n        Intent i=new Intent(this,MainActivity.class);\r\n        i.putExtra(\"role\",role);\r\n        i.putExtra(\"id\",id);\r\n\r\n        startActivity(i);\r\n    }\r\n    private void register(){\r\n        Intent i=new Intent(this,RegisterActivity.class);\r\n        startActivity(i);\r\n    }\r\n    private void showSimpleWarningDialog(String message) {\r\n        new MaterialDialog.Builder(this)\r\n                .iconRes(R.drawable.icon_warning)\r\n                .title(\"提示\")\r\n                .content(message)\r\n                .positiveText(\"确定\")\r\n                .onPositive(new MaterialDialog.SingleButtonCallback() {\r\n                    @Override\r\n                    public void onClick(@NonNull MaterialDialog dialog, @NonNull DialogAction which) {\r\n                        dialog.dismiss();\r\n                    }\r\n                })\r\n                .show();\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/my/activity/LoginActivity.java	(revision c4e8b682fc1928879c9d5b552e51c7f467a68635)
+++ app/src/main/java/com/example/my/activity/LoginActivity.java	(date 1614153927427)
@@ -34,7 +34,7 @@
                 MaterialEditText pwdText=findViewById(R.id.et_password);
                 String pwd=pwdText.getText().toString();
 
-                RxHttp.postJson("http://10.0.2.2:8000/api/user/login")
+                RxHttp.postJson("http://192.168.1.106:8000/api/user/login")
                         .add("phone",phone)
                         .add("password",pwd)
                         .asString()
